<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.1.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2010-08-16T14:19:54</timestamp>
        <product version="4.2.5000.27554" user="a a" serial="12345-GOLD-12345678--1234567-8-123456-78-12345">Dotfuscator Professional Edition (No Time Limit)</product>
    </header>
    <mapping>
        <module>
            <name>zControlsC.dll</name>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{EAAE581E-512E-4306-8428-B6C38A77BD84}</name>
                <newname>ᜀ</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x600041e-1</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x600041f-1</name>
                        <newname>ᜁ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.AnalysisFunctions</name>
                <methodlist>
                    <method>
                        <signature>float32(zControlsC.Charts.zLine)</signature>
                        <name>GetCoEfficent</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>zControlsC.Charts.zLine(zControlsC.Charts.zLine)</signature>
                        <name>GetLinearExpressionTrendY</name>
                    </method>
                    <method>
                        <signature>zControlsC.Charts.zLine(zControlsC.Charts.zLine)</signature>
                        <name>GetLinearExpressionTrendYInternal</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>float32(zControlsC.Charts.zLine)</signature>
                        <name>GetSlope</name>
                        <newname>ᜃ</newname>
                    </method>
                    <method>
                        <signature>float64(float64[])</signature>
                        <name>GetStandardDeviation</name>
                    </method>
                    <method>
                        <signature>float64(float64[])</signature>
                        <name>GetStandardDeviationInternal</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>int32(System.Decimal, System.Decimal, System.Decimal)</signature>
                        <name>GetStandardDeviationSigma</name>
                    </method>
                    <method>
                        <signature>float32(zControlsC.Charts.zLine)</signature>
                        <name>GetYIntercept</name>
                        <newname>ᜂ</newname>
                    </method>
                    <method>
                        <signature>bool(int64)</signature>
                        <name>IsPrimeNumber</name>
                    </method>
                    <method>
                        <signature>bool(int64)</signature>
                        <name>IsPrimeNumberInternal</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;int32&gt;(int32)</signature>
                        <name>PrimeList</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>zControlsC.Analyze.BaseData</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.CPMData(zControlsC.Analyze.LoadData, System.Collections.ArrayList&amp;)</signature>
                        <name>AddCPM</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.DayData(zControlsC.Analyze.LoadData, System.Collections.ArrayList&amp;)</signature>
                        <name>AddDay</name>
                        <newname>ᜂ</newname>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.LineHaulData(zControlsC.Analyze.LoadData, System.Collections.ArrayList&amp;)</signature>
                        <name>AddLH</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(string, string, int64, System.Decimal, int32, System.Decimal, string, string, string, string, System.Decimal, string, string, string, string)</signature>
                        <name>AddLoad</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Analyze.LoadData)</signature>
                        <name>AddLoad</name>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.ModeData(zControlsC.Analyze.LoadData, System.Collections.ArrayList&amp;)</signature>
                        <name>AddMode</name>
                        <newname>ᜆ</newname>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.MonthData(zControlsC.Analyze.LoadData, System.Collections.ArrayList&amp;)</signature>
                        <name>AddMonth</name>
                        <newname>ᜄ</newname>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.SCACData(zControlsC.Analyze.LoadData, System.Collections.ArrayList&amp;)</signature>
                        <name>AddSCAC</name>
                        <newname>ᜈ</newname>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.SICData(zControlsC.Analyze.LoadData, System.Collections.ArrayList&amp;)</signature>
                        <name>AddSIC</name>
                        <newname>ᜇ</newname>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.WeekData(zControlsC.Analyze.LoadData, System.Collections.ArrayList&amp;)</signature>
                        <name>AddWeek</name>
                        <newname>ᜃ</newname>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.YearData(zControlsC.Analyze.LoadData, System.Collections.ArrayList&amp;)</signature>
                        <name>AddYear</name>
                        <newname>ᜅ</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;)</signature>
                        <name>CPM_PaintBackground</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, System.Drawing.Rectangle&amp;)</signature>
                        <name>CPM_PaintGridLines</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, System.Collections.ArrayList&amp;, System.Drawing.Rectangle&amp;)</signature>
                        <name>CPM_PaintLines</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, string)</signature>
                        <name>CPM_PaintTitle</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, System.Drawing.Rectangle&amp;)</signature>
                        <name>CPM_PaintXAxis</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ExportToExcel</name>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.DayData(System.DateTime)</signature>
                        <name>FindDate</name>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.ModeData(string)</signature>
                        <name>FindMode</name>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.MonthData(int32, int32)</signature>
                        <name>FindMonth</name>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.SCACData(string)</signature>
                        <name>FindSCAC</name>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.SICData(string)</signature>
                        <name>FindSIC</name>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.WeekData(int32, int32)</signature>
                        <name>FindWeek</name>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.YearData(int32)</signature>
                        <name>FindYear</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_AverageLoadCost</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_CostPerPound</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_CPM</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_CWT</name>
                    </method>
                    <method>
                        <signature>System.Collections.ArrayList()</signature>
                        <name>get_Days</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Lane</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LaneDestination</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LaneOrigin</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LaneReversed</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_LoadCount</name>
                    </method>
                    <method>
                        <signature>System.Collections.ArrayList()</signature>
                        <name>get_Loads</name>
                    </method>
                    <method>
                        <signature>System.Collections.ArrayList()</signature>
                        <name>get_Modes</name>
                    </method>
                    <method>
                        <signature>System.Collections.ArrayList()</signature>
                        <name>get_Months</name>
                    </method>
                    <method>
                        <signature>System.Collections.ArrayList()</signature>
                        <name>get_SCACs</name>
                    </method>
                    <method>
                        <signature>System.Collections.ArrayList()</signature>
                        <name>get_SICs</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_StandardDeviationCostPerPound</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_StandardDeviationCPM</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_StandardDeviationCWT</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_StandardDeviationLinehaul</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_StandardDeviationTransitDays</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_TotalFuel</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_TotalLineHaul</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_TotalMiles</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_TotalWeight</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_TransitTimeAverage</name>
                    </method>
                    <method>
                        <signature>System.Collections.ArrayList()</signature>
                        <name>get_Weeks</name>
                    </method>
                    <method>
                        <signature>System.Collections.ArrayList()</signature>
                        <name>get_Years</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>System.Decimal(System.Collections.ArrayList&amp;)</signature>
                        <name>GetStandardDeviation_CostPerPound</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>System.Decimal(System.Collections.ArrayList&amp;)</signature>
                        <name>GetStandardDeviation_CPM</name>
                        <newname>ᜄ</newname>
                    </method>
                    <method>
                        <signature>System.Decimal(System.Collections.ArrayList&amp;)</signature>
                        <name>GetStandardDeviation_CWT</name>
                        <newname>ᜂ</newname>
                    </method>
                    <method>
                        <signature>System.Decimal(System.Collections.ArrayList&amp;)</signature>
                        <name>GetStandardDeviation_LineHaul</name>
                        <newname>ᜃ</newname>
                    </method>
                    <method>
                        <signature>System.Decimal(System.Collections.ArrayList&amp;)</signature>
                        <name>GetStandardDeviation_TransitDays</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Image()</signature>
                        <name>GetStandardDeviationChart_CPM</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image(int32, int32)</signature>
                        <name>GetStandardDeviationChart_CPM</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image()</signature>
                        <name>GetStandardDeviationChart_LineHaul</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image(int32, int32)</signature>
                        <name>GetStandardDeviationChart_LineHaul</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image()</signature>
                        <name>GetStandardDeviationChart_TransitTime</name>
                    </method>
                    <method>
                        <signature>zControlsC.Charts.zLine[](zControlsC.Analyze.BaseData/TrendChartTypeEnum, zControlsC.Analyze.BaseData/TrendChartTypeEnum, zControlsC.Analyze.BaseData/TrendChartTotalStyle)</signature>
                        <name>GetTrendChart</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;)</signature>
                        <name>PaintBackgroundLH</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;)</signature>
                        <name>PaintGridLinesLH</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, System.Collections.ArrayList&amp;)</signature>
                        <name>PaintLinesLH</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, string)</signature>
                        <name>PaintTitleLH</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;)</signature>
                        <name>PaintXAxisLH</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LaneDestination</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LaneOrigin</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>_alLoads</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_Destination</name>
                        <newname>ᜆ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isDirty</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_Origin</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_totalFuel</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_totalLH</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_totalMiles</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_totalTransitDays</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_totalWeight</name>
                        <newname>ᜃ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.BaseData/TrendChartTotalStyle</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.Analyze.BaseData/TrendChartTotalStyle</signature>
                        <name>CostPerPound</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.BaseData/TrendChartTotalStyle</signature>
                        <name>CPM</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.BaseData/TrendChartTotalStyle</signature>
                        <name>CWT</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.BaseData/TrendChartTotalStyle</signature>
                        <name>Linehaul</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.BaseData/TrendChartTypeEnum</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.Analyze.BaseData/TrendChartTypeEnum</signature>
                        <name>Day</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.BaseData/TrendChartTypeEnum</signature>
                        <name>Mode</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.BaseData/TrendChartTypeEnum</signature>
                        <name>Month</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.BaseData/TrendChartTypeEnum</signature>
                        <name>SCAC</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.BaseData/TrendChartTypeEnum</signature>
                        <name>SIC</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.BaseData/TrendChartTypeEnum</signature>
                        <name>Week</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.BaseData/TrendChartTypeEnum</signature>
                        <name>Year</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.CPMData</name>
                <newname>a.a.ᜀ</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_CPM</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                        <newname>ᜂ</newname>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.IComparable.CompareTo</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                        <newname>ᜀ</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_CPM</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.DayData</name>
                <methodlist>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, string)</signature>
                        <name>CPM_PaintTitle</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_Date</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.IComparable.CompareTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>_Date</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.LaneData</name>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>DeleteMode</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>DeleteSCAC</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>DeleteSIC</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.IComparable.CompareTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>zControlsC.Analyze.LanesAnalysis</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Data.DataTable)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Data.DataTable, System.Data.DataTable)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.LaneData(string, string)</signature>
                        <name>AddLane</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.LaneData(zControlsC.Analyze.LaneData)</signature>
                        <name>AddLane</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>DeleteLoad</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Analyze.LaneData, string)</signature>
                        <name>DeleteMode</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Analyze.LaneData, string)</signature>
                        <name>DeleteSCAC</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Analyze.LaneData, string)</signature>
                        <name>DeleteSIC</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.Analyze.LanesAnalysis/FilterBy, System.Decimal)</signature>
                        <name>FilterDays</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.Analyze.LanesAnalysis/FilterBy, System.Decimal)</signature>
                        <name>FilterModes</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.Analyze.LanesAnalysis/FilterBy, System.Decimal)</signature>
                        <name>FilterMonths</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.Analyze.LanesAnalysis/FilterBy, System.Decimal)</signature>
                        <name>FilterSCACs</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.Analyze.LanesAnalysis/FilterBy, System.Decimal)</signature>
                        <name>FilterSICs</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.Analyze.LanesAnalysis/FilterBy, System.Decimal)</signature>
                        <name>FilterWeeks</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.Analyze.LanesAnalysis/FilterBy, System.Decimal)</signature>
                        <name>FilterYears</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Finalize</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>get_Data</name>
                    </method>
                    <method>
                        <signature>System.Collections.ArrayList()</signature>
                        <name>get_Lanes</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>get_Regions</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GetDestinations</name>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.LaneData(string)</signature>
                        <name>GetLane</name>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.LaneData(string, string)</signature>
                        <name>GetLane</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GetOrigins</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetRegion</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>LaneIndex</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void(zControlsC.Analyze.LanesAnalysis/LaneTypeEnum)</signature>
                        <name>ProcessData</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Analyze.LanesAnalysis/LaneTypeEnum)</signature>
                        <name>Regionalize</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Serialize</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>SerializeThis</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(System.Data.DataTable)</signature>
                        <name>set_Data</name>
                    </method>
                    <method>
                        <signature>void(System.Data.DataTable)</signature>
                        <name>set_Regions</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ArrayList)</signature>
                        <name>SetLanes</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>_alLanes</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>System.Data.DataTable</signature>
                        <name>_data</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>_destination</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isDirty</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>_origin</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>System.Data.DataTable</signature>
                        <name>_regions</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/LaneTypeEnum</signature>
                        <name>laneType</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>System.Threading.ParameterizedThreadStart</signature>
                        <name>tsSerialize</name>
                        <newname>ᜆ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.LanesAnalysis/FilterBy</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/FilterBy</signature>
                        <name>AverageLoadCost</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/FilterBy</signature>
                        <name>CostPerPound</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/FilterBy</signature>
                        <name>CPM</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/FilterBy</signature>
                        <name>CWT</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/FilterBy</signature>
                        <name>LoadCount</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/FilterBy</signature>
                        <name>StandardDeviation_CostPerPound</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/FilterBy</signature>
                        <name>StandardDeviation_CPM</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/FilterBy</signature>
                        <name>StandardDeviation_CWT</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/FilterBy</signature>
                        <name>StandardDeviation_Linehaul</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/FilterBy</signature>
                        <name>TotalFuel</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/FilterBy</signature>
                        <name>TotalLinehaul</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/FilterBy</signature>
                        <name>TotalMiles</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/FilterBy</signature>
                        <name>TotalWeight</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/FilterBy</signature>
                        <name>TransitTimeAverage</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.LanesAnalysis/LaneTypeEnum</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/LaneTypeEnum</signature>
                        <name>Regional</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/LaneTypeEnum</signature>
                        <name>State2State</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/LaneTypeEnum</signature>
                        <name>Zip2Zip</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.LanesAnalysis/RegionalizeObjectData</name>
                <methodlist>
                    <method>
                        <signature>void(System.Data.DataTable&amp;, int32, int32, zControlsC.Analyze.LanesAnalysis/LaneTypeEnum)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.LanesAnalysis/LaneTypeEnum()</signature>
                        <name>get_LaneType</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>get_Loads</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_RowEnd</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_RowStart</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis/LaneTypeEnum</signature>
                        <name>_laneType</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>System.Data.DataTable</signature>
                        <name>_loads</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_rowEnd</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_rowStart</name>
                        <newname>ᜂ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.LanesAnalysis/SerializationData</name>
                <methodlist>
                    <method>
                        <signature>void(zControlsC.Analyze.LanesAnalysis, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.LanesAnalysis()</signature>
                        <name>get_Obj</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_filename</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.Analyze.LanesAnalysis</signature>
                        <name>_obj</name>
                        <newname>ᜁ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.LineHaulData</name>
                <newname>a.a.ᜁ</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_LH</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.IComparable.CompareTo</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                        <newname>ᜂ</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_LH</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.LoadData</name>
                <methodlist>
                    <method>
                        <signature>void(string, string, int64, System.Decimal, int32, System.Decimal, string, string, string, string, System.Decimal, string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>zControlsC.Analyze.LoadData()</signature>
                        <name>Copy</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_CostPerPound</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_CPM</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_CWT</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DeliverDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Division</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DState</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DZip</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_Fuel</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_LH</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_LoadID</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Miles</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Mode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OState</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OZip</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SCAC</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ShipDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SIC</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TransitTime</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_Weight</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.IComparable.CompareTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_DeliverDate</name>
                        <newname>ᜋ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_div</name>
                        <newname>ᜎ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_dState</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_DZip</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_Fuel</name>
                        <newname>ᜈ</newname>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_LH</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_LoadID</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_Miles</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_Mode</name>
                        <newname>ᜍ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_oState</name>
                        <newname>ᜆ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_OZip</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_SCAC</name>
                        <newname>ᜉ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_ShipDate</name>
                        <newname>ᜊ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_SIC</name>
                        <newname>ᜌ</newname>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_Weight</name>
                        <newname>ᜃ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.ModeData</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, string)</signature>
                        <name>CPM_PaintTitle</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Mode</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.IComparable.CompareTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_Mode</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.MonthData</name>
                <methodlist>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, string)</signature>
                        <name>CPM_PaintTitle</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Month</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MonthYear</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Year</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.IComparable.CompareTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>_Month</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_Year</name>
                        <newname>ᜁ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.SCACData</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, string)</signature>
                        <name>CPM_PaintTitle</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SCAC</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.IComparable.CompareTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_SCAC</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.SICData</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, string)</signature>
                        <name>CPM_PaintTitle</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SIC</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.IComparable.CompareTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_SIC</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.WeekData</name>
                <methodlist>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, string)</signature>
                        <name>CPM_PaintTitle</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Week</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WeekYear</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Year</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.IComparable.CompareTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>_Week</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_Year</name>
                        <newname>ᜁ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Analyze.YearData</name>
                <methodlist>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, string)</signature>
                        <name>CPM_PaintTitle</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Year</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.IComparable.CompareTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>_Year</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Charts.LegendMouseEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(string, System.Drawing.Color, System.Drawing.Color, zControlsC.Charts.zLine/PlotShapeEnum)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_LineColor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LineName</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_PlotColor</name>
                    </method>
                    <method>
                        <signature>zControlsC.Charts.zLine/PlotShapeEnum()</signature>
                        <name>get_PlotShape</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_LineColor</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_LineName</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_PlotColor</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLine/PlotShapeEnum</signature>
                        <name>_PlotShape</name>
                        <newname>ᜃ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Charts.LineAnimatingEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>zControlsC.Charts.PlotMouseEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(string, string, System.Decimal, System.Drawing.Color, System.Drawing.Color, zControlsC.Charts.zLine/PlotShapeEnum)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_LineColor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LineName</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_PlotColor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PlotName</name>
                    </method>
                    <method>
                        <signature>zControlsC.Charts.zLine/PlotShapeEnum()</signature>
                        <name>get_PlotShape</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_PlotValue</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_LineColor</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_LineName</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_PlotColor</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_PlotName</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLine/PlotShapeEnum</signature>
                        <name>_PlotShape</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_PlotValue</name>
                        <newname>ᜂ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Charts.zLine</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Charts.zLine/LineAnimatingHandler)</signature>
                        <name>add_LineAnimating</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddPlot</name>
                    </method>
                    <method>
                        <signature>void(string, System.Decimal)</signature>
                        <name>AddPlot</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Charts.zLine/Plot)</signature>
                        <name>AddPlot</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearPlots</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DropLineStart</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DropLineStop</name>
                        <newname>ᜃ</newname>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAnimating</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_LineColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Drawing2D.DashStyle()</signature>
                        <name>get_LineDashStyle</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_LineThickness</name>
                    </method>
                    <method>
                        <signature>zControlsC.Charts.zLine/LineTypeEnum()</signature>
                        <name>get_LineType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_PlotColor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PlotCount</name>
                    </method>
                    <method>
                        <signature>System.Collections.ArrayList()</signature>
                        <name>get_Plots</name>
                    </method>
                    <method>
                        <signature>zControlsC.Charts.zLine/PlotShapeEnum()</signature>
                        <name>get_PlotShape</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_PlotSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>InsertPlotAt</name>
                    </method>
                    <method>
                        <signature>void(string, System.Decimal, int32)</signature>
                        <name>InsertPlotAt</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Charts.zLine/Plot, int32)</signature>
                        <name>InsertPlotAt</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>MovePlot</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Charts.zLine/LineAnimatingHandler)</signature>
                        <name>remove_LineAnimating</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReversePlots</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_LineColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Drawing2D.DashStyle)</signature>
                        <name>set_LineDashStyle</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_LineThickness</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Charts.zLine/LineTypeEnum)</signature>
                        <name>set_LineType</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_PlotColor</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Charts.zLine/PlotShapeEnum)</signature>
                        <name>set_PlotShape</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_PlotSize</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Sort</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.IComparable.CompareTo</name>
                    </method>
                    <method>
                        <signature>void(object, System.Timers.ElapsedEventArgs)</signature>
                        <name>tDropLine_Elapsed</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ThrobbingLineStart</name>
                        <newname>ᜂ</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ThrobbingLineStop</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>void(object, System.Timers.ElapsedEventArgs)</signature>
                        <name>tThrobbingLine_Elapsed</name>
                        <newname>ᜀ</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_IsAnimating</name>
                        <newname>ᜊ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_lineColor</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Drawing2D.DashStyle</signature>
                        <name>_lineDashStyle</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>_lineThickness</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>_lineThicknessA</name>
                        <newname>ᜈ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLine/LineTypeEnum</signature>
                        <name>_lineType</name>
                        <newname>ᜆ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_name</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_plotColor</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>_Plots</name>
                        <newname>ᜋ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLine/PlotShapeEnum</signature>
                        <name>_plotShape</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>_plotSize</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_up</name>
                        <newname>ᜉ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLine/LineAnimatingHandler</signature>
                        <name>LineAnimating</name>
                        <newname>ᜎ</newname>
                    </field>
                    <field>
                        <signature>System.Timers.Timer</signature>
                        <name>tDropLine</name>
                        <newname>ᜍ</newname>
                    </field>
                    <field>
                        <signature>System.Timers.Timer</signature>
                        <name>tThrobbingLine</name>
                        <newname>ᜌ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Charts.zLine/LineAnimatingHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, zControlsC.Charts.LineAnimatingEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, zControlsC.Charts.LineAnimatingEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>zControlsC.Charts.zLine/LineTypeEnum</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.Charts.zLine/LineTypeEnum</signature>
                        <name>Sharp</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLine/LineTypeEnum</signature>
                        <name>Wavy</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Charts.zLine/Plot</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Decimal)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.IComparable.CompareTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>IsNullPlot</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Name</name>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>Value</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Charts.zLine/PlotShapeEnum</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.Charts.zLine/PlotShapeEnum</signature>
                        <name>Circle</name>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLine/PlotShapeEnum</signature>
                        <name>Cross</name>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLine/PlotShapeEnum</signature>
                        <name>Diamond</name>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLine/PlotShapeEnum</signature>
                        <name>Dot</name>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLine/PlotShapeEnum</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLine/PlotShapeEnum</signature>
                        <name>Square</name>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLine/PlotShapeEnum</signature>
                        <name>Triangle</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Charts.zLineChart</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Charts.zLineChart/Legend_MouseClickHandler)</signature>
                        <name>add_Legend_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Charts.zLineChart/Legend_MouseMoveHandler)</signature>
                        <name>add_Legend_MouseMove</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Charts.zLineChart/Plot_MouseClickHandler)</signature>
                        <name>add_Plot_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Charts.zLineChart/Plot_MouseMoveHandler)</signature>
                        <name>add_Plot_MouseMove</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Charts.zLine[])</signature>
                        <name>AddLine</name>
                    </method>
                    <method>
                        <signature>void(System.Decimal, System.Drawing.Color, System.Drawing.Drawing2D.DashStyle, float32)</signature>
                        <name>AddStandardDeviationLine</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Charts.zLine)</signature>
                        <name>AddStandardDeviationLine</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BalanceLines</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearLines</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateGraphicsPath</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AutoMinMaxIncrement</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_GridLineColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image()</signature>
                        <name>get_Image</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_LegendFontColor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_LegendFontSize</name>
                    </method>
                    <method>
                        <signature>System.Drawing.FontStyle()</signature>
                        <name>get_LegendFontStyle</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_LegendMouseOverFontColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.FontStyle()</signature>
                        <name>get_LegendMouseOverFOntStyle</name>
                    </method>
                    <method>
                        <signature>System.Collections.ArrayList()</signature>
                        <name>get_Lines</name>
                    </method>
                    <method>
                        <signature>zControlsC.Charts.zLineChart/PlotValueFormatEnum()</signature>
                        <name>get_PlotValueFormat</name>
                    </method>
                    <method>
                        <signature>System.Collections.ArrayList()</signature>
                        <name>get_SecondaryLines</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowGridLines</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowLegend</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowLineCheckBoxes</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowSecondaryYAxis</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowStandardDeviationLines</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowSubTitle</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowTitle</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SubTitle</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_SubTitleColor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_SubTitleSize</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_TitleColor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_TitleSize</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_XAxisBorderColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_XAxisFontColor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_XAxisFontSize</name>
                    </method>
                    <method>
                        <signature>System.Drawing.FontStyle()</signature>
                        <name>get_XAxisFontStyle</name>
                    </method>
                    <method>
                        <signature>System.Drawing.FontStyle()</signature>
                        <name>get_XAxisMouseOverFontStyle</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_XAxisName</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_XAxisNameFontColor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_XAxisNameFontSize</name>
                    </method>
                    <method>
                        <signature>System.Drawing.FontStyle()</signature>
                        <name>get_XAxisNameFontStyle</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_YAxisFontColor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_YAxisFontSize</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_YAxisIncrement</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_YAxisMaximum</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_YAxisMinimum</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_YAxisName</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_YAxisNameFontColor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_YAxisNameFontSize</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_YAxisSecondaryFontColor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_YAxisSecondaryFontSize</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_YAxisSecondaryIncrement</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_YAxisSecondaryMaximum</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_YAxisSecondaryMinimum</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_YAxisSecondaryName</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_YAxisSecondaryNameFontColor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_YAxisSecondaryNameFontSize</name>
                    </method>
                    <method>
                        <signature>void(int32, zControlsC.Charts.zLineChart/LineTypeEnum)</signature>
                        <name>HideLine</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.Charts.zLineChart/LineTypeEnum)</signature>
                        <name>HideLine</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(object, zControlsC.Charts.LineAnimatingEventArgs)</signature>
                        <name>LineAnimating</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnLocationChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseClick</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseDown</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseMove</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseUp</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnPaint</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnResize</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, System.Drawing.Graphics&amp;)</signature>
                        <name>PaintBackground</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, System.Drawing.Graphics&amp;)</signature>
                        <name>PaintGridLines</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, System.Drawing.Graphics&amp;)</signature>
                        <name>PaintLegend</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, System.Drawing.Graphics&amp;)</signature>
                        <name>PaintLines</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, System.Drawing.Graphics&amp;)</signature>
                        <name>PaintPlots</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, System.Drawing.Graphics&amp;)</signature>
                        <name>PaintStandardDeviationLines</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;)</signature>
                        <name>PaintTip</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, System.Drawing.Graphics&amp;)</signature>
                        <name>PaintTitle</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;, System.Drawing.Graphics&amp;)</signature>
                        <name>PaintXAxis</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics&amp;)</signature>
                        <name>PaintXAxisHighlight</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Charts.zLineChart/Legend_MouseClickHandler)</signature>
                        <name>remove_Legend_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Charts.zLineChart/Legend_MouseMoveHandler)</signature>
                        <name>remove_Legend_MouseMove</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Charts.zLineChart/Plot_MouseClickHandler)</signature>
                        <name>remove_Plot_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Charts.zLineChart/Plot_MouseMoveHandler)</signature>
                        <name>remove_Plot_MouseMove</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Drawing2D.GraphicsPath(float32, float32, System.Drawing.Rectangle, int32, int32)</signature>
                        <name>RoundedRectangle</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AutoMinMaxIncrement</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_GridLineColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_LegendFontColor</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_LegendFontSize</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.FontStyle)</signature>
                        <name>set_LegendFontStyle</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_LegendMouseOverFontColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.FontStyle)</signature>
                        <name>set_LegendMouseOverFOntStyle</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.Charts.zLineChart/PlotValueFormatEnum)</signature>
                        <name>set_PlotValueFormat</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowGridLines</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowLegend</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowLineCheckBoxes</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowSecondaryYAxis</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowStandardDeviationLines</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowSubTitle</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowTitle</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SubTitle</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_SubTitleColor</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_SubTitleSize</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_TitleColor</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_TitleSize</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_XAxisBorderColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_XAxisFontColor</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_XAxisFontSize</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.FontStyle)</signature>
                        <name>set_XAxisFontStyle</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.FontStyle)</signature>
                        <name>set_XAxisMouseOverFontStyle</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_XAxisName</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_XAxisNameFontColor</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_XAxisNameFontSize</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.FontStyle)</signature>
                        <name>set_XAxisNameFontStyle</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_YAxisFontColor</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_YAxisFontSize</name>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>set_YAxisIncrement</name>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>set_YAxisMaximum</name>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>set_YAxisMinimum</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_YAxisName</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_YAxisNameFontColor</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_YAxisNameFontSize</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_YAxisSecondaryFontColor</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_YAxisSecondaryFontSize</name>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>set_YAxisSecondaryIncrement</name>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>set_YAxisSecondaryMaximum</name>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>set_YAxisSecondaryMinimum</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_YAxisSecondaryName</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_YAxisSecondaryNameFontColor</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_YAxisSecondaryNameFontSize</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>SetAllLineThickness</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetChartArea</name>
                        <newname>ᜂ</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetMinMaxIncrement</name>
                        <newname>ᜃ</newname>
                    </method>
                    <method>
                        <signature>void(int32, zControlsC.Charts.zLineChart/LineTypeEnum)</signature>
                        <name>ShowLine</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.Charts.zLineChart/LineTypeEnum)</signature>
                        <name>ShowLine</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>zLineChart_Load</name>
                        <newname>ᜀ</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_autoMinMaxIncrement</name>
                        <newname>ᜓ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_borderColor</name>
                        <newname>ᜐ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Rectangle</signature>
                        <name>_chartArea</name>
                        <newname>ᝈ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.RectangleF</signature>
                        <name>_chartAreaF</name>
                        <newname>ᝉ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Drawing2D.GraphicsPath[]</signature>
                        <name>_gpLegend</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Drawing2D.GraphicsPath[]</signature>
                        <name>_gpLegendCheckBox</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Drawing2D.GraphicsPath[]</signature>
                        <name>_gpLegendImage</name>
                        <newname>ᜆ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Drawing2D.GraphicsPath[]</signature>
                        <name>_gpLine</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Drawing2D.GraphicsPath[]</signature>
                        <name>_gpPlot</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Drawing2D.GraphicsPath[]</signature>
                        <name>_gpStandardDeviationLine</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Drawing2D.GraphicsPath[]</signature>
                        <name>_gpTip</name>
                        <newname>ᜉ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Drawing2D.GraphicsPath[]</signature>
                        <name>_gpXAxis</name>
                        <newname>ᜈ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_gridLineColor</name>
                        <newname>ᝁ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Bitmap</signature>
                        <name>_image</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Graphics</signature>
                        <name>_imageGraphics</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_leftMargin</name>
                        <newname>ᝇ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_legendFontColor</name>
                        <newname>᜸</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_legendFontColorMouseOver</name>
                        <newname>᜹</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>_legendFontSize</name>
                        <newname>᜼</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.FontStyle</signature>
                        <name>_legendFontStyle</name>
                        <newname>᜺</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.FontStyle</signature>
                        <name>_legendFontStyleMouseOver</name>
                        <newname>᜻</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_legendOpacity</name>
                        <newname>᜽</newname>
                    </field>
                    <field>
                        <signature>bool[]</signature>
                        <name>_lineIsVisible</name>
                        <newname>ᜊ</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>_lines</name>
                        <newname>ᜋ</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>_linesSecondary</name>
                        <newname>ᜌ</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>_linesStandardDeviation</name>
                        <newname>ᜍ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_mouseClicked</name>
                        <newname>ᝄ</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>_pArray</name>
                        <newname>ᝆ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_plotMouseOverGrowAmount</name>
                        <newname>ᝅ</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>_plots</name>
                        <newname>ᜎ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLineChart/PlotValueFormatEnum</signature>
                        <name>_plotValueFormat</name>
                        <newname>ᜑ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_showGridLines</name>
                        <newname>ᝀ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_showLegend</name>
                        <newname>᜷</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_showLineCheckBoxes</name>
                        <newname>᜾</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_showSecondary_Y_Axis</name>
                        <newname>ᜮ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_showStandardDeviationLines</name>
                        <newname>᜿</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_showSubTitle</name>
                        <newname>᜗</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_showTitle</name>
                        <newname>᜖</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_subTitle</name>
                        <newname>᜕</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_subTitleColor</name>
                        <newname>᜙</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>_subTitleSize</name>
                        <newname>᜛</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>_tips</name>
                        <newname>ᜏ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_title</name>
                        <newname>᜔</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_titleColor</name>
                        <newname>᜘</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>_titleSize</name>
                        <newname>᜚</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>_x</name>
                        <newname>ᝂ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_xAxisBorderColor</name>
                        <newname>ᜤ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_xAxisFontColor</name>
                        <newname>᜝</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>_xAxisFontSize</name>
                        <newname>᜞</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.FontStyle</signature>
                        <name>_xAxisFontStyle</name>
                        <newname>ᜟ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_xAxisItemCount</name>
                        <newname>ᜥ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.FontStyle</signature>
                        <name>_xAxisMouseOverFontStyle</name>
                        <newname>ᜠ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_xAxisName</name>
                        <newname>᜜</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_xAxisNameFontColor</name>
                        <newname>ᜡ</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>_xAxisNameFontSize</name>
                        <newname>ᜢ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.FontStyle</signature>
                        <name>_xAxisNameFontStyle</name>
                        <newname>ᜣ</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>_y</name>
                        <newname>ᝃ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_yAxisFontColor</name>
                        <newname>ᜩ</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>_yAxisFontSize</name>
                        <newname>ᜪ</newname>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_yAxisIncrement</name>
                        <newname>ᜭ</newname>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_yAxisMaximum</name>
                        <newname>ᜬ</newname>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_yAxisMinimum</name>
                        <newname>ᜫ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_yAxisName</name>
                        <newname>ᜦ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_yAxisNameFontColor</name>
                        <newname>ᜧ</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>_yAxisNameFontSize</name>
                        <newname>ᜨ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_yAxisSecondaryFontColor</name>
                        <newname>ᜲ</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>_yAxisSecondaryFontSize</name>
                        <newname>ᜳ</newname>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_yAxisSecondaryIncrement</name>
                        <newname>᜶</newname>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_yAxisSecondaryMaximum</name>
                        <newname>᜵</newname>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_yAxisSecondaryMinimum</name>
                        <newname>᜴</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_yAxisSecondaryName</name>
                        <newname>ᜯ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_yAxisSecondaryNameFontColor</name>
                        <newname>ᜰ</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>_yAxisSecondaryNameFontSize</name>
                        <newname>ᜱ</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>ᝎ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>formatString</name>
                        <newname>ᜒ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLineChart/Legend_MouseClickHandler</signature>
                        <name>Legend_MouseClick</name>
                        <newname>ᝍ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLineChart/Legend_MouseMoveHandler</signature>
                        <name>Legend_MouseMove</name>
                        <newname>ᝌ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLineChart/Plot_MouseClickHandler</signature>
                        <name>Plot_MouseClick</name>
                        <newname>ᝋ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLineChart/Plot_MouseMoveHandler</signature>
                        <name>Plot_MouseMove</name>
                        <newname>ᝊ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Charts.zLineChart/Legend_MouseClickHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, zControlsC.Charts.LegendMouseEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, zControlsC.Charts.LegendMouseEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>zControlsC.Charts.zLineChart/Legend_MouseMoveHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, zControlsC.Charts.LegendMouseEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, zControlsC.Charts.LegendMouseEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>zControlsC.Charts.zLineChart/LineTypeEnum</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.Charts.zLineChart/LineTypeEnum</signature>
                        <name>Primary</name>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLineChart/LineTypeEnum</signature>
                        <name>Secondary</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Charts.zLineChart/Plot_MouseClickHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, zControlsC.Charts.PlotMouseEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, zControlsC.Charts.PlotMouseEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>zControlsC.Charts.zLineChart/Plot_MouseMoveHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, zControlsC.Charts.PlotMouseEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, zControlsC.Charts.PlotMouseEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>zControlsC.Charts.zLineChart/PlotValueFormatEnum</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.Charts.zLineChart/PlotValueFormatEnum</signature>
                        <name>Currency</name>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLineChart/PlotValueFormatEnum</signature>
                        <name>Number</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Charts.zLinePlotInfo</name>
                <newname>a.b.ᜀ</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PlotName</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                        <newname>ᜂ</newname>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.IComparable.CompareTo</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                        <newname>ᜀ</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_plotName</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Charts.zLineTipInfo</name>
                <newname>a.b.ᜁ</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, System.Decimal, System.Drawing.Color, System.Drawing.Color, zControlsC.Charts.zLine/PlotShapeEnum)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_LineColor</name>
                        <newname>ᜂ</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LineName</name>
                        <newname>ᜅ</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_PlotColor</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PlotName</name>
                        <newname>ᜃ</newname>
                    </method>
                    <method>
                        <signature>zControlsC.Charts.zLine/PlotShapeEnum()</signature>
                        <name>get_PlotShape</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_PlotValue</name>
                        <newname>ᜄ</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_lineColor</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_lineName</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_plotColor</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_plotName</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.Charts.zLine/PlotShapeEnum</signature>
                        <name>_plotShape</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_plotValue</name>
                        <newname>ᜂ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Charts.zMapChart</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>ᜄ</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LoadStates</name>
                        <newname>ᜃ</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LoadZipcodes</name>
                        <newname>ᜂ</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.KeyEventArgs)</signature>
                        <name>OnKeyDown</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseMove</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseWheel</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnPaint</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PanDown</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PanLeft</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PanRight</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PanUp</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ProjectStates</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ProjectZipcodes</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ZoomIn</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ZoomOut</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.SolidBrush</signature>
                        <name>brush</name>
                        <newname>ᜉ</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.PointF[]&gt;</signature>
                        <name>geoStates</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.PointF[]&gt;</signature>
                        <name>geoZips</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Drawing2D.GraphicsPath[]</signature>
                        <name>gpState</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Drawing2D.GraphicsPath[]</signature>
                        <name>gpZip</name>
                        <newname>ᜆ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Pen</signature>
                        <name>pen</name>
                        <newname>ᜊ</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.PointF[]&gt;</signature>
                        <name>projectedStates</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.PointF[]&gt;</signature>
                        <name>projectedZips</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Drawing2D.Matrix</signature>
                        <name>transform</name>
                        <newname>ᜈ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.RectangleF</signature>
                        <name>viewport</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>x</name>
                        <newname>ᜋ</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>y</name>
                        <newname>ᜌ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Conversion.Conversion</name>
                <methodlist>
                    <method>
                        <signature>string(int32)</signature>
                        <name>AddZero</name>
                    </method>
                    <method>
                        <signature>string(System.Data.DataTable)</signature>
                        <name>ConvertToHTML</name>
                    </method>
                    <method>
                        <signature>System.Drawing.PointF(System.Drawing.PointF)</signature>
                        <name>Deproject</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>ExcelColumnLetter</name>
                    </method>
                    <method>
                        <signature>int64(string)</signature>
                        <name>ExcelColumnNumber</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>FullStateToStateCode</name>
                    </method>
                    <method>
                        <signature>string(int32, zControlsC.Conversion.Conversion/GetStateOptions)</signature>
                        <name>GetState</name>
                    </method>
                    <method>
                        <signature>string(int32, zControlsC.Conversion.Conversion/IntegerToMonthStringOptions)</signature>
                        <name>IntegerToMonthString</name>
                    </method>
                    <method>
                        <signature>object(object, bool)</signature>
                        <name>nz</name>
                    </method>
                    <method>
                        <signature>string(string, zControlsC.Conversion.Conversion/ParseEmailAddressOptions)</signature>
                        <name>ParseEmailAddress</name>
                    </method>
                    <method>
                        <signature>string(string, zControlsC.Conversion.Conversion/ParsePhoneNumberOptions)</signature>
                        <name>ParsePhoneNumber</name>
                    </method>
                    <method>
                        <signature>string(string, zControlsC.Conversion.Conversion/ParsePostalCodeOptions)</signature>
                        <name>ParsePostalCode</name>
                    </method>
                    <method>
                        <signature>int32(System.Decimal, System.Decimal, System.Decimal, int32)</signature>
                        <name>PixelsFromChartValue</name>
                    </method>
                    <method>
                        <signature>System.Drawing.PointF(System.Drawing.PointF)</signature>
                        <name>Project</name>
                    </method>
                    <method>
                        <signature>System.Decimal(System.Decimal)</signature>
                        <name>RoundDown</name>
                    </method>
                    <method>
                        <signature>System.Decimal(System.Decimal)</signature>
                        <name>RoundUp</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>SQLReplace</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>StateCodeToFullName</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(!!0&amp;, !!0&amp;)</signature>
                        <name>Swap</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>DEGREEStoRADIANS</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>ONEOVERWGS84SEMIMAJOR</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>RADIANStoDEGREES</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>WGS84SEMIMAJOR</name>
                        <newname>ᜂ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Conversion.Conversion/GetStateOptions</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/GetStateOptions</signature>
                        <name>Abbreviation</name>
                    </field>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/GetStateOptions</signature>
                        <name>FullName</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Conversion.Conversion/IntegerToMonthStringOptions</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/IntegerToMonthStringOptions</signature>
                        <name>Abbreviation</name>
                    </field>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/IntegerToMonthStringOptions</signature>
                        <name>FullMonth</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Conversion.Conversion/ParseEmailAddressOptions</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/ParseEmailAddressOptions</signature>
                        <name>DomainExtension</name>
                    </field>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/ParseEmailAddressOptions</signature>
                        <name>DomainName</name>
                    </field>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/ParseEmailAddressOptions</signature>
                        <name>DomainNameAndExtension</name>
                    </field>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/ParseEmailAddressOptions</signature>
                        <name>MailboxName</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Conversion.Conversion/ParsePhoneNumberOptions</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/ParsePhoneNumberOptions</signature>
                        <name>AreaCode</name>
                    </field>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/ParsePhoneNumberOptions</signature>
                        <name>DigitsOnly</name>
                    </field>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/ParsePhoneNumberOptions</signature>
                        <name>Formatted</name>
                    </field>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/ParsePhoneNumberOptions</signature>
                        <name>Prefix</name>
                    </field>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/ParsePhoneNumberOptions</signature>
                        <name>Suffix</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Conversion.Conversion/ParsePostalCodeOptions</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/ParsePostalCodeOptions</signature>
                        <name>Full_State_Name</name>
                    </field>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/ParsePostalCodeOptions</signature>
                        <name>FullZip_Formatted</name>
                    </field>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/ParsePostalCodeOptions</signature>
                        <name>FullZip_NoSpacesNoHyphens</name>
                    </field>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/ParsePostalCodeOptions</signature>
                        <name>POBox_US_Only</name>
                    </field>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/ParsePostalCodeOptions</signature>
                        <name>State_Abbreviation</name>
                    </field>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/ParsePostalCodeOptions</signature>
                        <name>ThreeZip</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>zControlsC.Conversion.Conversion/ParsePostalCodeOptions</signature>
                        <name>Zipcode</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.DataConnection.AccessDBConn</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearQueryResults</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>zControlsC.DataConnection.AccessDBConn/StructureFillTable()</signature>
                        <name>FillTable</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ConnectionString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Database</name>
                    </method>
                    <method>
                        <signature>zControlsC.DataConnection.AccessDBConn/SQLStructure()</signature>
                        <name>get_SQL</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SQLString</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>get_TableChanges</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MakeConnectionString</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>RefreshData</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RunQuery</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.DataConnection.AccessDBConn/SQLStructure)</signature>
                        <name>set_SQL</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetSQLCommands</name>
                        <newname>ᜂ</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateDatabase</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.OleDb.OleDbCommandBuilder</signature>
                        <name>CommandBuilder</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>System.Data.OleDb.OleDbDataAdapter</signature>
                        <name>da</name>
                        <newname>ᜆ</newname>
                    </field>
                    <field>
                        <signature>System.Data.OleDb.OleDbConnection</signature>
                        <name>db</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>System.Data.DataTable</signature>
                        <name>dt</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.DataConnection.AccessDBConn/StructureFillTable</signature>
                        <name>QueryResults</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strConnectionString</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strDatabase</name>
                        <newname>ᜉ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strSQLString</name>
                        <newname>ᜈ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.DataConnection.AccessDBConn/SQLStructure</signature>
                        <name>structureSQL</name>
                        <newname>ᜊ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strUserPassword</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>zClass</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>zFilename</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.DataConnection.AccessDBConn/SQLStructure</name>
                <methodlist>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>SelectField</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>SortBy</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>Table</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>WhereClause</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.DataConnection.AccessDBConn/StructureFillTable</name>
                <methodlist>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.OleDb.OleDbDataAdapter</signature>
                        <name>DataAdapter</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Errors</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Rows</name>
                    </field>
                    <field>
                        <signature>System.Data.DataTable</signature>
                        <name>Table</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.DataConnection.ACE_AccessDBConn</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearQueryResults</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>zControlsC.DataConnection.ACE_AccessDBConn/StructureFillTable()</signature>
                        <name>FillTable</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ConnectionString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Database</name>
                    </method>
                    <method>
                        <signature>zControlsC.DataConnection.ACE_AccessDBConn/SQLStructure()</signature>
                        <name>get_SQL</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SQLString</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>get_TableChanges</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MakeConnectionString</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>RefreshData</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RunQuery</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.DataConnection.ACE_AccessDBConn/SQLStructure)</signature>
                        <name>set_SQL</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetSQLCommands</name>
                        <newname>ᜂ</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateDatabase</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.OleDb.OleDbCommandBuilder</signature>
                        <name>CommandBuilder</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>System.Data.OleDb.OleDbDataAdapter</signature>
                        <name>da</name>
                        <newname>ᜆ</newname>
                    </field>
                    <field>
                        <signature>System.Data.OleDb.OleDbConnection</signature>
                        <name>db</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>System.Data.DataTable</signature>
                        <name>dt</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.DataConnection.ACE_AccessDBConn/StructureFillTable</signature>
                        <name>QueryResults</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strConnectionString</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strDatabase</name>
                        <newname>ᜉ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strSQLString</name>
                        <newname>ᜈ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.DataConnection.ACE_AccessDBConn/SQLStructure</signature>
                        <name>structureSQL</name>
                        <newname>ᜊ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strUserPassword</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>zClass</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>zFilename</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.DataConnection.ACE_AccessDBConn/SQLStructure</name>
                <methodlist>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>SelectField</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>SortBy</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>Table</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>WhereClause</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.DataConnection.ACE_AccessDBConn/StructureFillTable</name>
                <methodlist>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.OleDb.OleDbDataAdapter</signature>
                        <name>DataAdapter</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Errors</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Rows</name>
                    </field>
                    <field>
                        <signature>System.Data.DataTable</signature>
                        <name>Table</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.DataConnection.ACE_ExcelConn</name>
                <methodlist>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearQueryResults</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>zControlsC.DataConnection.ACE_ExcelConn/StructureFillTable()</signature>
                        <name>FillTable</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ConnectionString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Database</name>
                    </method>
                    <method>
                        <signature>zControlsC.DataConnection.ACE_ExcelConn/SQLStructure()</signature>
                        <name>get_SQL</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SQLString</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>get_TableChanges</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MakeConnectionString</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>RefreshData</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RunQuery</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.DataConnection.ACE_ExcelConn/SQLStructure)</signature>
                        <name>set_SQL</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetSQLCommands</name>
                        <newname>ᜂ</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateDatabase</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_HasHeader</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>System.Data.OleDb.OleDbCommandBuilder</signature>
                        <name>CommandBuilder</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>System.Data.OleDb.OleDbDataAdapter</signature>
                        <name>da</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>System.Data.OleDb.OleDbConnection</signature>
                        <name>db</name>
                        <newname>ᜆ</newname>
                    </field>
                    <field>
                        <signature>System.Data.DataTable</signature>
                        <name>dt</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.DataConnection.ACE_ExcelConn/StructureFillTable</signature>
                        <name>QueryResults</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strConnectionString</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strDatabase</name>
                        <newname>ᜉ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strSQLString</name>
                        <newname>ᜈ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.DataConnection.ACE_ExcelConn/SQLStructure</signature>
                        <name>structureSQL</name>
                        <newname>ᜊ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>zClass</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>zFilename</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.DataConnection.ACE_ExcelConn/SQLStructure</name>
                <methodlist>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>SelectField</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>SortBy</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>Table</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>WhereClause</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.DataConnection.ACE_ExcelConn/StructureFillTable</name>
                <methodlist>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.OleDb.OleDbDataAdapter</signature>
                        <name>DataAdapter</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Errors</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Rows</name>
                    </field>
                    <field>
                        <signature>System.Data.DataTable</signature>
                        <name>Table</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.DataConnection.dbf_DBConn</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearQueryResults</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>zControlsC.DataConnection.dbf_DBConn/StructureFillTable()</signature>
                        <name>FillTable</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ConnectionString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Database</name>
                    </method>
                    <method>
                        <signature>zControlsC.DataConnection.dbf_DBConn/SQLStructure()</signature>
                        <name>get_SQL</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SQLString</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>get_TableChanges</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MakeConnectionString</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>RefreshData</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RunQuery</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.DataConnection.dbf_DBConn/SQLStructure)</signature>
                        <name>set_SQL</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetSQLCommands</name>
                        <newname>ᜂ</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateDatabase</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.OleDb.OleDbCommandBuilder</signature>
                        <name>CommandBuilder</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>System.Data.OleDb.OleDbDataAdapter</signature>
                        <name>da</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>System.Data.OleDb.OleDbConnection</signature>
                        <name>db</name>
                        <newname>ᜆ</newname>
                    </field>
                    <field>
                        <signature>System.Data.DataTable</signature>
                        <name>dt</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.DataConnection.dbf_DBConn/StructureFillTable</signature>
                        <name>QueryResults</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strConnectionString</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strDatabase</name>
                        <newname>ᜈ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strSQLString</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.DataConnection.dbf_DBConn/SQLStructure</signature>
                        <name>structureSQL</name>
                        <newname>ᜉ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>zClass</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>zFilename</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.DataConnection.dbf_DBConn/SQLStructure</name>
                <methodlist>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>SelectField</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>SortBy</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>Table</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>WhereClause</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.DataConnection.dbf_DBConn/StructureFillTable</name>
                <methodlist>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.OleDb.OleDbDataAdapter</signature>
                        <name>DataAdapter</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Errors</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Rows</name>
                    </field>
                    <field>
                        <signature>System.Data.DataTable</signature>
                        <name>Table</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.DataConnection.MSAccess_Functions</name>
                <methodlist>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>RunAccessMacro</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>zControlsC.DataConnection.SQLServerConn</name>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearQueryResults</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>zControlsC.DataConnection.SQLServerConn/StructureFillTable()</signature>
                        <name>FillTable</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ConnectionString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Database</name>
                    </method>
                    <method>
                        <signature>zControlsC.DataConnection.SQLServerConn/SQLStructure()</signature>
                        <name>get_SQL</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SQLServer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SQLString</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>get_TableChanges</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserID</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseWindowsCredentials</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MakeConnectionString</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>RefreshData</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RunQuery</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.DataConnection.SQLServerConn/SQLStructure)</signature>
                        <name>set_SQL</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseWindowsCredentials</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetSQLCommands</name>
                        <newname>ᜂ</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateDatabase</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_UseWindowsCredentials</name>
                        <newname>ᜍ</newname>
                    </field>
                    <field>
                        <signature>System.Data.OleDb.OleDbCommandBuilder</signature>
                        <name>CommandBuilder</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>System.Data.OleDb.OleDbDataAdapter</signature>
                        <name>da</name>
                        <newname>ᜆ</newname>
                    </field>
                    <field>
                        <signature>System.Data.OleDb.OleDbConnection</signature>
                        <name>db</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>disposedValue</name>
                        <newname>ᜎ</newname>
                    </field>
                    <field>
                        <signature>System.Data.DataTable</signature>
                        <name>dt</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.DataConnection.SQLServerConn/StructureFillTable</signature>
                        <name>QueryResults</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strConnectionString</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strDatabase</name>
                        <newname>ᜋ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strSQLServer</name>
                        <newname>ᜉ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strSQLString</name>
                        <newname>ᜊ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.DataConnection.SQLServerConn/SQLStructure</signature>
                        <name>structureSQL</name>
                        <newname>ᜌ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strUserID</name>
                        <newname>ᜈ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strUserPassword</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>zClass</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>zFilename</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.DataConnection.SQLServerConn/SQLStructure</name>
                <methodlist>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>SelectField</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>Table</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>WhereClause</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.DataConnection.SQLServerConn/StructureFillTable</name>
                <methodlist>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.OleDb.OleDbDataAdapter</signature>
                        <name>DataAdapter</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Errors</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Rows</name>
                    </field>
                    <field>
                        <signature>System.Data.DataTable</signature>
                        <name>Table</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Encryption.EncryptFiles</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>CreateIV</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>CreateKey</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>DecryptFile</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>EncryptFile</name>
                    </method>
                    <method>
                        <signature>void(string, string, unsigned int8[], unsigned int8[], zControlsC.Encryption.EncryptFiles/CryptoAction)</signature>
                        <name>EncryptOrDecryptFile</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowProgress</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowProgress</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_ShowProgress</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>disposedValue</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>System.IO.FileStream</signature>
                        <name>fsInput</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>System.IO.FileStream</signature>
                        <name>fsOutput</name>
                        <newname>ᜂ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Encryption.EncryptFiles/CryptoAction</name>
                <newname>zControlsC.Encryption.EncryptFiles/ᜀ</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.Encryption.EncryptFiles/CryptoAction</signature>
                        <name>ActionDecrypt</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.Encryption.EncryptFiles/CryptoAction</signature>
                        <name>ActionEncrypt</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Encryption.EncryptStrings</name>
                <methodlist>
                    <method>
                        <signature>string(string)</signature>
                        <name>DecryptString</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>DecryptString</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>EncryptString</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>EncryptString</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>zControlsC.Encryption.RijndaelEnhanced</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, int32, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, int32, int32, int32, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, int32, int32, int32, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, int32, int32, int32, string, string, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[])</signature>
                        <name>AddSalt</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Decrypt</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>Decrypt</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>DecryptToBytes</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[])</signature>
                        <name>DecryptToBytes</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Encrypt</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>Encrypt</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>EncryptToBytes</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[])</signature>
                        <name>EncryptToBytes</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GenerateRandomNumber</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>GenerateSalt</name>
                        <newname>ᜀ</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Security.Cryptography.ICryptoTransform</signature>
                        <name>decryptor</name>
                        <newname>ᜉ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DEFAULT_HASH_ALGORITHM</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DEFAULT_KEY_SIZE</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DEFAULT_MAX_SALT_LEN</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DEFAULT_MIN_SALT_LEN</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>System.Security.Cryptography.ICryptoTransform</signature>
                        <name>encryptor</name>
                        <newname>ᜈ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MAX_ALLOWED_SALT_LEN</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxSaltLen</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MIN_ALLOWED_SALT_LEN</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>minSaltLen</name>
                        <newname>ᜆ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.ExcelEx.CellFormatConstants</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Accounting</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Currency</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DateLong</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DateShort</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DateTime</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Fraction</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Percent</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Scientific</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Time</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.ExcelEx.ColumnFormatter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.ExcelEx.ExcelWorkbook/CellStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.ExcelEx.ExcelWorkbook/CellStyle, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.ExcelEx.ExcelWorkbook/CellStyle, int32, zControlsC.ExcelEx.ExcelWorkbook/CellStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.ExcelEx.ExcelWorkbook/CellStyle, zControlsC.ExcelEx.ExcelWorkbook/CellStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetDefaultColumnStyle</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetDefaultHeaderStyle</name>
                        <newname>ᜁ</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyle</signature>
                        <name>ColumnHeaderStyle</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ColumnName</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyle</signature>
                        <name>ColumnStyle</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ColumnWidth</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.ExcelEx.ColumnFormatterList</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Data.DataTable&amp;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.ExcelEx.ExcelWorkbook/CellStyle)</signature>
                        <name>AddColumn</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.ExcelEx.ExcelWorkbook/CellStyle, int32)</signature>
                        <name>AddColumn</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.ExcelEx.ExcelWorkbook/CellStyle, int32, zControlsC.ExcelEx.ExcelWorkbook/CellStyle)</signature>
                        <name>AddColumn</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.ExcelEx.ExcelWorkbook/CellStyle, zControlsC.ExcelEx.ExcelWorkbook/CellStyle)</signature>
                        <name>AddColumn</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.ExcelEx.ColumnFormatter)</signature>
                        <name>AddColumn</name>
                    </method>
                    <method>
                        <signature>void(System.Data.DataTable&amp;)</signature>
                        <name>AddDataTableColumns</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearAllColumns</name>
                    </method>
                    <method>
                        <signature>System.Collections.ArrayList()</signature>
                        <name>get_Columns</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>alColumns</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.ExcelEx.ExcelWorkbook</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, System.Data.DataTable&amp;)</signature>
                        <name>AddDataRows</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(int32, System.Data.DataTable&amp;, zControlsC.ExcelEx.ColumnFormatterList)</signature>
                        <name>AddDataRows</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(int32, System.Data.DataTable&amp;, zControlsC.ExcelEx.ExcelWorkbook/AlternatingRowsStructure)</signature>
                        <name>AddDataRows</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(int32, System.Data.DataTable&amp;, zControlsC.ExcelEx.ExcelWorkbook/AlternatingRowsStructure, zControlsC.ExcelEx.ColumnFormatterList)</signature>
                        <name>AddDataRows</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(int32, System.Data.DataTable&amp;)</signature>
                        <name>AddHeaderRow</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void(int32, System.Data.DataTable&amp;, zControlsC.ExcelEx.ColumnFormatterList)</signature>
                        <name>AddHeaderRow</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddSheet</name>
                    </method>
                    <method>
                        <signature>void(string, object[0...,0...])</signature>
                        <name>AddSheet</name>
                    </method>
                    <method>
                        <signature>void(string, System.Data.DataTable&amp;, zControlsC.ExcelEx.ColumnFormatterList, zControlsC.ExcelEx.ExcelWorkbook/AlternatingRowsStructure)</signature>
                        <name>AddSheet</name>
                    </method>
                    <method>
                        <signature>void(string, System.Data.DataTable&amp;, zControlsC.ExcelEx.ExcelWorkbook/AlternatingRowsStructure)</signature>
                        <name>AddSheet</name>
                    </method>
                    <method>
                        <signature>void(string, System.Data.DataTable)</signature>
                        <name>AddSheet</name>
                    </method>
                    <method>
                        <signature>void(string, System.Data.DataTable, zControlsC.ExcelEx.ColumnFormatterList)</signature>
                        <name>AddSheet</name>
                    </method>
                    <method>
                        <signature>void(string, System.Drawing.Color)</signature>
                        <name>AddSheet</name>
                    </method>
                    <method>
                        <signature>void(string, System.Drawing.Color, object[0...,0...])</signature>
                        <name>AddSheet</name>
                    </method>
                    <method>
                        <signature>void(string, System.Drawing.Color, System.Data.DataTable&amp;)</signature>
                        <name>AddSheet</name>
                    </method>
                    <method>
                        <signature>void(string, System.Drawing.Color, System.Data.DataTable&amp;, zControlsC.ExcelEx.ColumnFormatterList)</signature>
                        <name>AddSheet</name>
                    </method>
                    <method>
                        <signature>void(string, System.Drawing.Color, System.Data.DataTable&amp;, zControlsC.ExcelEx.ColumnFormatterList, zControlsC.ExcelEx.ExcelWorkbook/AlternatingRowsStructure)</signature>
                        <name>AddSheet</name>
                    </method>
                    <method>
                        <signature>void(string, System.Drawing.Color, System.Data.DataTable, zControlsC.ExcelEx.ExcelWorkbook/AlternatingRowsStructure)</signature>
                        <name>AddSheet</name>
                    </method>
                    <method>
                        <signature>C1.C1Excel.XLStyle(zControlsC.ExcelEx.ExcelWorkbook/CellStyle)</signature>
                        <name>CreateStyle</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>DeleteSheet</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>DeleteSheet</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>HideColumn</name>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>HideColumn</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>HideSheet</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>HideSheet</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>InsertColumn</name>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>InsertColumn</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>InsertRow</name>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>InsertRow</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LoadExcelFile</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>LoadExcelFile</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>RemoveColumn</name>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>RemoveColumn</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>RemoveRow</name>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>RemoveRow</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SaveExcelFile</name>
                    </method>
                    <method>
                        <signature>void(string, zControlsC.ExcelEx.ExcelWorkbook/ExcelFileFormat)</signature>
                        <name>SaveExcelFile</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>SetActiveSheet</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetActiveSheet</name>
                    </method>
                    <method>
                        <signature>void(string, int32, int32, string)</signature>
                        <name>SetCellFormula</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, zControlsC.ExcelEx.ExcelWorkbook/CellStyle)</signature>
                        <name>SetCellStyle</name>
                    </method>
                    <method>
                        <signature>void(string, int32, int32, zControlsC.ExcelEx.ExcelWorkbook/CellStyle)</signature>
                        <name>SetCellStyle</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, object)</signature>
                        <name>SetCellValue</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, object, zControlsC.ExcelEx.ExcelWorkbook/CellStyle)</signature>
                        <name>SetCellValue</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, string)</signature>
                        <name>SetCellValue</name>
                    </method>
                    <method>
                        <signature>void(string, int32, int32, object)</signature>
                        <name>SetCellValue</name>
                    </method>
                    <method>
                        <signature>void(string, int32, int32, object, zControlsC.ExcelEx.ExcelWorkbook/CellStyle)</signature>
                        <name>SetCellValue</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, string)</signature>
                        <name>SetColumnFormat</name>
                    </method>
                    <method>
                        <signature>void(string, int32, string)</signature>
                        <name>SetColumnFormat</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, zControlsC.ExcelEx.ExcelWorkbook/CellStyle)</signature>
                        <name>SetColumnStyle</name>
                    </method>
                    <method>
                        <signature>void(string, int32, zControlsC.ExcelEx.ExcelWorkbook/CellStyle)</signature>
                        <name>SetColumnStyle</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>SetColumnWidth</name>
                    </method>
                    <method>
                        <signature>void(string, int32, int32)</signature>
                        <name>SetColumnWidth</name>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>SetGridlines</name>
                    </method>
                    <method>
                        <signature>void(string, System.Drawing.Color)</signature>
                        <name>SetGridlinesColor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>SetRowHeight</name>
                    </method>
                    <method>
                        <signature>void(string, int32, int32)</signature>
                        <name>SetRowHeight</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, zControlsC.ExcelEx.ExcelWorkbook/CellStyle)</signature>
                        <name>SetRowStyle</name>
                    </method>
                    <method>
                        <signature>void(string, int32, zControlsC.ExcelEx.ExcelWorkbook/CellStyle)</signature>
                        <name>SetRowStyle</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>SetSheetName</name>
                    </method>
                    <method>
                        <signature>void(int32, System.Drawing.Color)</signature>
                        <name>SetTabColor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Drawing.Color)</signature>
                        <name>SetTabColor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>ShowColumn</name>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>ShowColumn</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>ShowSheet</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ShowSheet</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>disposedValue</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fName</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>tempExcel</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>C1.C1Excel.C1XLBook</signature>
                        <name>xl</name>
                        <newname>ᜂ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.ExcelEx.ExcelWorkbook/AlternatingRowsStructure</name>
                <methodlist>
                    <method>
                        <signature>void(System.Drawing.Color, System.Drawing.Color)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>RowBackColor</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>RowForeColor</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.ExcelEx.ExcelWorkbook/CellStyle</name>
                <methodlist>
                    <method>
                        <signature>void(bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignHorz()</signature>
                        <name>get_AlignHorz</name>
                    </method>
                    <method>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignVert()</signature>
                        <name>get_AlignVert</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BackColor</name>
                    </method>
                    <method>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern()</signature>
                        <name>get_BackPattern</name>
                    </method>
                    <method>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder()</signature>
                        <name>get_BorderBottom</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BorderColorBottom</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BorderColorLeft</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BorderColorRight</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BorderColorTop</name>
                    </method>
                    <method>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder()</signature>
                        <name>get_BorderLeft</name>
                    </method>
                    <method>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder()</signature>
                        <name>get_BorderRight</name>
                    </method>
                    <method>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder()</signature>
                        <name>get_BorderTop</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Font()</signature>
                        <name>get_Font</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_ForeColor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Format</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Locked</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_PatternColor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Rotation</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_WordWrap</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignHorz)</signature>
                        <name>set_AlignHorz</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignVert)</signature>
                        <name>set_AlignVert</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BackColor</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern)</signature>
                        <name>set_BackPattern</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder)</signature>
                        <name>set_BorderBottom</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BorderColorBottom</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BorderColorLeft</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BorderColorRight</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BorderColorTop</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder)</signature>
                        <name>set_BorderLeft</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder)</signature>
                        <name>set_BorderRight</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder)</signature>
                        <name>set_BorderTop</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Font)</signature>
                        <name>set_Font</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_ForeColor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Format</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Locked</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_PatternColor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Rotation</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_WordWrap</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignHorz</signature>
                        <name>_AlignHorz</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignVert</signature>
                        <name>_AlignVert</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_BackColor</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>_BackPattern</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>_BorderBottom</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_BorderColorBottom</name>
                        <newname>ᜈ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_BorderColorLeft</name>
                        <newname>ᜉ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_BorderColorRight</name>
                        <newname>ᜊ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_BorderColorTop</name>
                        <newname>ᜋ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>_BorderLeft</name>
                        <newname>ᜆ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>_BorderRight</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>_BorderTop</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Font</signature>
                        <name>_Font</name>
                        <newname>ᜌ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_ForeColor</name>
                        <newname>ᜍ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_Format</name>
                        <newname>ᜎ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_Locked</name>
                        <newname>ᜏ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_PatternColor</name>
                        <newname>ᜐ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_Rotation</name>
                        <newname>ᜑ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_WordWrap</name>
                        <newname>ᜒ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignHorz</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignHorz</signature>
                        <name>Center</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignHorz</signature>
                        <name>Fill</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignHorz</signature>
                        <name>General</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignHorz</signature>
                        <name>Justify</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignHorz</signature>
                        <name>Left</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignHorz</signature>
                        <name>Right</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignHorz</signature>
                        <name>Selection</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignHorz</signature>
                        <name>Undefined</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignVert</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignVert</signature>
                        <name>Bottom</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignVert</signature>
                        <name>Center</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignVert</signature>
                        <name>Justify</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignVert</signature>
                        <name>Top</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleAlignVert</signature>
                        <name>Undefined</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>DiagonalCrossHatch</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>DiagonalStripe</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>Gray06</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>Gray12</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>Gray25</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>Gray50</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>Gray75</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>HorizontalStripe</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>ReverseDiagonalStripe</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>Solid</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>ThickDiagonalCrossHatch</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>ThinDiagonalCrossHatch</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>ThinDiagonalStripe</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>ThinHorizontalCrossHatch</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>ThinHorizontalStripe</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>ThinReverseDiagonalStripe</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>ThinVerticalStripe</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBackPattern</signature>
                        <name>VerticalStripe</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>Dashed</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>Dotted</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>Double_</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>Hair</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>Medium</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>MediumDashDotDotted</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>MediumDashDotted</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>MediumDashed</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>SlantedMediumDashDotted</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>Thick</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>Thin</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>ThinDashDotDotted</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/CellStyleBorder</signature>
                        <name>ThinDashDotted</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.ExcelEx.ExcelWorkbook/ExcelFileFormat</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/ExcelFileFormat</signature>
                        <name>Excel2003</name>
                    </field>
                    <field>
                        <signature>zControlsC.ExcelEx.ExcelWorkbook/ExcelFileFormat</signature>
                        <name>Excel2007</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Form1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>ᜀ</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>C1.C1Excel.C1XLBook</signature>
                        <name>c1XLBook1</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Functions.zFunctions</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, string, string)</signature>
                        <name>OpenEmail</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>zControlsC.GIS.NorthAmerica.StateBorder</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;System.Collections.Generic.List`1&lt;System.Drawing.PointF&gt;&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;System.Drawing.PointF&gt;)</signature>
                        <name>AddPoints</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.PointF&gt;()</signature>
                        <name>get_CenterPoints</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.List`1&lt;System.Drawing.PointF&gt;&gt;()</signature>
                        <name>get_GeoBorders</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_State</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.List`1&lt;System.Drawing.PointF&gt;&gt;()</signature>
                        <name>ProjectedBorder</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.PointF&gt;</signature>
                        <name>centerPoints</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.List`1&lt;System.Drawing.PointF&gt;&gt;</signature>
                        <name>geoBorders</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>state</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.GIS.NorthAmerica.Zip3Border</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;System.Collections.Generic.List`1&lt;System.Drawing.PointF&gt;&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;System.Drawing.PointF&gt;)</signature>
                        <name>AddPoints</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.PointF&gt;()</signature>
                        <name>get_CenterPoints</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.List`1&lt;System.Drawing.PointF&gt;&gt;()</signature>
                        <name>get_GeoBorders</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Zip3</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.List`1&lt;System.Drawing.PointF&gt;&gt;()</signature>
                        <name>ProjectedBorder</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>System.Runtime.Serialization.IDeserializationCallback.OnDeserialization</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_Zip3</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.PointF&gt;</signature>
                        <name>centerPoints</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.List`1&lt;System.Drawing.PointF&gt;&gt;</signature>
                        <name>geoBorders</name>
                        <newname>ᜁ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.HTML.HTMLEmailSignatures</name>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>MikesSignature</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>zControlsC.Properties.Resources</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__11</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__12</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__27</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__28</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>get_A</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Blue_Down</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Blue_Down_2</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Blue_Left</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Blue_Left_2</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Blue_Left_3</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Blue_Left_4</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Blue_Right</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Blue_Right_2</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Blue_Right_3</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Blue_Right_4</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Blue_Up</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Blue_Up_2</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Blue_Up_3</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Down</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Left</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Right</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Round_Down</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Round_Left</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Round_Right</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Round_Up</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Up</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Ball_Black</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Ball_Blue</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Ball_Green</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Ball_Orange</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Ball_Pink</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Ball_Purple</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Ball_Red</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Ball_Silver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Ball_White</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Ball_Yellow</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>get_C1_C1Excel_2</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Check_Round_Blue</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Check_Round_Green</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_contact</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Contact_Female_1</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Contact_Female_2</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Contact_Female_3</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Contact_Male_1</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Contact_Male_2</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_folderClosed</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_folderOpen</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_GreenCheck</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_GreenPlus</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_home1</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>get_ICSharpCode_SharpZipLib</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Lightbulb_Off</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Lightbulb_On</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Lightning</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Mail_Closed_Blue</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Mail_Closed_Orange</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Mail_Opened_Blue</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Mail_Opened_Orange</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Minus</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_offline</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_PaperClip</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Pause_Blue</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Red_X</name>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Search</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Smiley1</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Smiley2</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Smiley3</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Smiley4</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Smiley5</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Smiley6</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_StarGold</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Stop_Blue</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Warning</name>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Random.Random</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>CoinFlip</name>
                    </method>
                    <method>
                        <signature>string(int32, zControlsC.Random.Random/RandomAlphaCharCase)</signature>
                        <name>RandomAlphaNumericSequence</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>RandomBoolean</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>RandomColor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>RandomFileName</name>
                    </method>
                    <method>
                        <signature>string(int32, zControlsC.Random.Random/RandomAlphaCharCase)</signature>
                        <name>RandomLetterSequence</name>
                    </method>
                    <method>
                        <signature>int32(float64, float64)</signature>
                        <name>RandomNumber</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>RandomNumberSequence</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Random</signature>
                        <name>r</name>
                        <newname>ᜀ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Random.Random/RandomAlphaCharCase</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.Random.Random/RandomAlphaCharCase</signature>
                        <name>Lower</name>
                    </field>
                    <field>
                        <signature>zControlsC.Random.Random/RandomAlphaCharCase</signature>
                        <name>Random</name>
                    </field>
                    <field>
                        <signature>zControlsC.Random.Random/RandomAlphaCharCase</signature>
                        <name>Upper</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.RegexEx.RegexEx</name>
                <methodlist>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsDate</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsEmailAddress</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsNumeric</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsPhoneNumber</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsPostalCode</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>zControlsC.RegexEx.RegexEx/REGEXType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>REGEX_EMAIL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>REGEX_NUMBER</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>REGEX_PHONENUMBER</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>REGEX_ZIPCODE</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Serialization.Serialize</name>
                <methodlist>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, bool)</signature>
                        <name>DeSerializeObject</name>
                    </method>
                    <method>
                        <signature>string(object, string, bool)</signature>
                        <name>SerializeObject</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>zControlsC.StatusChangedEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.DateTime, string, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_DateTime</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCompleted</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Message</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Operation</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>_DateTime</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_IsCompleted</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_Message</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_Operation</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.StringFunc.StringFunctions</name>
                <methodlist>
                    <method>
                        <signature>string(string, int32)</signature>
                        <name>Left</name>
                    </method>
                    <method>
                        <signature>string(string, int32)</signature>
                        <name>Mid</name>
                    </method>
                    <method>
                        <signature>string(string, int32, int32)</signature>
                        <name>Mid</name>
                    </method>
                    <method>
                        <signature>string(string, int32)</signature>
                        <name>Right</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>zControlsC.UI_Controls.GifImage</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Image)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CurrentFrame</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FrameCount</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ReverseAtEnd</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image(int32)</signature>
                        <name>GetFrame</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image()</signature>
                        <name>GetNextFrame</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ReverseAtEnd</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>currentFrame</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Imaging.FrameDimension</signature>
                        <name>dimension</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>frameCount</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Image</signature>
                        <name>gifImage</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>reverse</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>step</name>
                        <newname>ᜅ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.UI_Controls.InputBox</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>buttonCancel_Click</name>
                        <newname>ᜃ</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>buttonOK_Click</name>
                        <newname>ᜂ</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>zControlsC.UI_Controls.InputBoxValidatingHandler()</signature>
                        <name>get_Validator</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>InputBox_Load</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(zControlsC.UI_Controls.InputBoxValidatingHandler)</signature>
                        <name>set_Validator</name>
                    </method>
                    <method>
                        <signature>zControlsC.UI_Controls.InputBoxResult(string, string, string, zControlsC.UI_Controls.InputBoxValidatingHandler)</signature>
                        <name>Show</name>
                    </method>
                    <method>
                        <signature>zControlsC.UI_Controls.InputBoxResult(string, string, string, zControlsC.UI_Controls.InputBoxValidatingHandler, int32, int32)</signature>
                        <name>Show</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>textBoxText_TextChanged</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.CancelEventArgs)</signature>
                        <name>textBoxText_Validating</name>
                        <newname>ᜀ</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>zControlsC.UI_Controls.InputBoxValidatingHandler</signature>
                        <name>_validator</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>buttonCancel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>buttonOK</name>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ErrorProvider</signature>
                        <name>errorProviderText</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>labelPrompt</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>textBoxText</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.UI_Controls.InputBoxResult</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>OK</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Text</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.UI_Controls.InputBoxValidatingArgs</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>Cancel</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Message</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Text</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.UI_Controls.InputBoxValidatingHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, zControlsC.UI_Controls.InputBoxValidatingArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, zControlsC.UI_Controls.InputBoxValidatingArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>zControlsC.UI_Controls.zLabel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateRegion</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Finalize</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BackColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BackColorBorder</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BackColorDark</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BackColorLight</name>
                    </method>
                    <method>
                        <signature>zControlsC.UI_Controls.zLabel/RoundedCornersEnum()</signature>
                        <name>get_CornerSize</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image()</signature>
                        <name>get_Icon</name>
                    </method>
                    <method>
                        <signature>zControlsC.UI_Controls.zLabel/IconAlignmentEnum()</signature>
                        <name>get_IconAlignment</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_IconOffsetHorizontal</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_IconOffsetVertical</name>
                    </method>
                    <method>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum()</signature>
                        <name>get_IconSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_MouseOverBackColorDark</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_MouseOverBackColorLight</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_MouseOverBorderColor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MouseOverColorChange</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Font()</signature>
                        <name>get_MouseOverFont</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_MouseOverForeColor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RoundLowerLeftCorner</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RoundLowerRightCorner</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RoundUpperLeftCorner</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RoundUpperRightCorner</name>
                    </method>
                    <method>
                        <signature>System.Drawing.StringAlignment()</signature>
                        <name>get_TextAlign</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TextOffsetHorizontal</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TextOffsetVertical</name>
                    </method>
                    <method>
                        <signature>System.Drawing.StringFormatFlags()</signature>
                        <name>get_TextOrientation</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TextString</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseGradientBackColor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnLocationChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnMouseEnter</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnMouseLeave</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnPaint</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnPaintBackground</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnSizeChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BackColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BackColorBorder</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BackColorDark</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BackColorLight</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.UI_Controls.zLabel/RoundedCornersEnum)</signature>
                        <name>set_CornerSize</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Image)</signature>
                        <name>set_Icon</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.UI_Controls.zLabel/IconAlignmentEnum)</signature>
                        <name>set_IconAlignment</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_IconOffsetHorizontal</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_IconOffsetVertical</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.UI_Controls.zLabel/IconSizeEnum)</signature>
                        <name>set_IconSize</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_MouseOverBackColorDark</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_MouseOverBackColorLight</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_MouseOverBorderColor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MouseOverColorChange</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Font)</signature>
                        <name>set_MouseOverFont</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_MouseOverForeColor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RoundLowerLeftCorner</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RoundLowerRightCorner</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RoundUpperLeftCorner</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RoundUpperRightCorner</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.StringAlignment)</signature>
                        <name>set_TextAlign</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_TextOffsetHorizontal</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_TextOffsetVertical</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.StringFormatFlags)</signature>
                        <name>set_TextOrientation</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TextString</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseGradientBackColor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Message&amp;)</signature>
                        <name>WndProc</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>zLabel_Load</name>
                        <newname>ᜀ</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_BackColorBorder</name>
                        <newname>ᜋ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_BackColorDark</name>
                        <newname>ᜊ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_BackColorLight</name>
                        <newname>ᜉ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_BorderLineSize</name>
                        <newname>᜙</newname>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/RoundedCornersEnum</signature>
                        <name>_CornerSize</name>
                        <newname>᜘</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Image</signature>
                        <name>_Icon</name>
                        <newname>ᜏ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconAlignmentEnum</signature>
                        <name>_IconAlignment</name>
                        <newname>ᜐ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_IconOffsetHorizontal</name>
                        <newname>ᜒ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_IconOffsetVertical</name>
                        <newname>ᜑ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>_IconSize</name>
                        <newname>ᜓ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_IsMouseOver</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_MouseOverBackColorDark</name>
                        <newname>ᜍ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_MouseOverBackColorLight</name>
                        <newname>ᜌ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_MouseOverBorderColor</name>
                        <newname>ᜎ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_MouseOverColorChange</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Font</signature>
                        <name>_MouseOverFont</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_MouseOverForeColor</name>
                        <newname>ᜆ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_RoundLowerLeftCorner</name>
                        <newname>᜕</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_RoundLowerRightCorner</name>
                        <newname>᜗</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_RoundUpperLeftCorner</name>
                        <newname>᜔</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_RoundUpperRightCorner</name>
                        <newname>᜖</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.StringFormat</signature>
                        <name>_TextFormat</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_TextHorizontalOffset</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_TextString</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_TextVerticalOffset</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_UseGradientBackColor</name>
                        <newname>ᜈ</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>᜚</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.UI_Controls.zLabel/IconAlignmentEnum</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconAlignmentEnum</signature>
                        <name>Center</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconAlignmentEnum</signature>
                        <name>Far</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconAlignmentEnum</signature>
                        <name>Near</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.UI_Controls.zLabel/IconSizeEnum</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size1</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size10</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size11</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size12</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size13</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size14</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size15</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size16</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size17</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size18</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size19</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size2</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size20</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size21</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size22</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size23</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size24</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size3</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size4</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size5</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size6</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size7</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size8</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum</signature>
                        <name>Size9</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.UI_Controls.zLabel/RoundedCornersEnum</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/RoundedCornersEnum</signature>
                        <name>ExtraLarge</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/RoundedCornersEnum</signature>
                        <name>Large</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/RoundedCornersEnum</signature>
                        <name>Medium</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/RoundedCornersEnum</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel/RoundedCornersEnum</signature>
                        <name>Small</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.UI_Controls.zNavigatorTree</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.TreeNodeMouseClickEventHandler)</signature>
                        <name>add_TreeNodeMouseClick</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.TreeNodeMouseClickEventHandler)</signature>
                        <name>add_TreeNodeMouseDoubleClick</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.TreeNodeMouseHoverEventHandler)</signature>
                        <name>add_TreeNodeMouseHover</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_TreeViewClick</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_TreeViewDoubleClick</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.DragEventHandler)</signature>
                        <name>add_TreeViewDragDrop</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.DragEventHandler)</signature>
                        <name>add_TreeViewDragEnter</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_TreeViewDragLeave</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.ItemDragEventHandler)</signature>
                        <name>add_TreeViewItemDrag</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventHandler)</signature>
                        <name>add_TreeViewMouseClick</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventHandler)</signature>
                        <name>add_TreeViewMouseDoubleClick</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventHandler)</signature>
                        <name>add_TreeViewMouseDown</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.UI_Controls.zTreeNode)</signature>
                        <name>AddNode</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearNodes</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Collapse</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Expand</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AnimationSpeed</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AutoScroll</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Point()</signature>
                        <name>get_AutoScrollOffset</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AutoSize</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.AutoValidate()</signature>
                        <name>get_AutoValidate</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image()</signature>
                        <name>get_BackgroundImage</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.ImageLayout()</signature>
                        <name>get_BackgroundImageLayout</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.BindingContext()</signature>
                        <name>get_BindingContext</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CanEnableIme</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CanRaiseEvents</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.CreateParams()</signature>
                        <name>get_CreateParams</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.Cursor()</signature>
                        <name>get_Cursor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.Cursor()</signature>
                        <name>get_DefaultCursor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.ImeMode()</signature>
                        <name>get_DefaultImeMode</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Font()</signature>
                        <name>get_Font</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_GroupBackColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_GroupBackColorMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_GroupBorderColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_GroupBorderColorMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Font()</signature>
                        <name>get_GroupFont</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_GroupForeColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_GroupForeColorMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image()</signature>
                        <name>get_GroupIcon</name>
                    </method>
                    <method>
                        <signature>zControlsC.UI_Controls.zLabel/IconAlignmentEnum()</signature>
                        <name>get_GroupIconAlignment</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_GroupIconOffsetHorizontal</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_GroupIconOffsetVertical</name>
                    </method>
                    <method>
                        <signature>zControlsC.UI_Controls.zLabel/IconSizeEnum()</signature>
                        <name>get_GroupIconSize</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GroupText</name>
                    </method>
                    <method>
                        <signature>System.Drawing.StringAlignment()</signature>
                        <name>get_GroupTextAlignment</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_GroupTextOffsetHorizontal</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_GroupTextOffsetVertical</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.ImeMode()</signature>
                        <name>get_ImeModeBase</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAnimating</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.Layout.LayoutEngine()</signature>
                        <name>get_LayoutEngine</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.RightToLeft()</signature>
                        <name>get_RightToLeft</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ScaleChildren</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowFocusCues</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowKeyboardCues</name>
                    </method>
                    <method>
                        <signature>System.ComponentModel.ISite()</signature>
                        <name>get_Site</name>
                    </method>
                    <method>
                        <signature>zControlsC.UI_Controls.zNavigatorTree/zNavigatorTreeState()</signature>
                        <name>get_State</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_TreeBranchColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Drawing2D.DashStyle()</signature>
                        <name>get_TreeBranchStyle</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image()</signature>
                        <name>get_TreeCollapseIcon</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image()</signature>
                        <name>get_TreeExpandIcon</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TreeFontSize</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_TreeSelectedItemBackColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_TreeSelectedItemBorderColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_TreeSelectedItemForeColor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>Group_Click</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>Group_Resize</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.TreeNodeMouseClickEventHandler)</signature>
                        <name>remove_TreeNodeMouseClick</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.TreeNodeMouseClickEventHandler)</signature>
                        <name>remove_TreeNodeMouseDoubleClick</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.TreeNodeMouseHoverEventHandler)</signature>
                        <name>remove_TreeNodeMouseHover</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_TreeViewClick</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_TreeViewDoubleClick</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.DragEventHandler)</signature>
                        <name>remove_TreeViewDragDrop</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.DragEventHandler)</signature>
                        <name>remove_TreeViewDragEnter</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_TreeViewDragLeave</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.ItemDragEventHandler)</signature>
                        <name>remove_TreeViewItemDrag</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventHandler)</signature>
                        <name>remove_TreeViewMouseClick</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventHandler)</signature>
                        <name>remove_TreeViewMouseDoubleClick</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventHandler)</signature>
                        <name>remove_TreeViewMouseDown</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_AnimationSpeed</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AutoScroll</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Point)</signature>
                        <name>set_AutoScrollOffset</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AutoSize</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.AutoValidate)</signature>
                        <name>set_AutoValidate</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Image)</signature>
                        <name>set_BackgroundImage</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.ImageLayout)</signature>
                        <name>set_BackgroundImageLayout</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.BindingContext)</signature>
                        <name>set_BindingContext</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Cursor)</signature>
                        <name>set_Cursor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Font)</signature>
                        <name>set_Font</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_GroupBackColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_GroupBackColorMouseOver</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_GroupBorderColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_GroupBorderColorMouseOver</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Font)</signature>
                        <name>set_GroupFont</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_GroupForeColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_GroupForeColorMouseOver</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Image)</signature>
                        <name>set_GroupIcon</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.UI_Controls.zLabel/IconAlignmentEnum)</signature>
                        <name>set_GroupIconAlignment</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_GroupIconOffsetHorizontal</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_GroupIconOffsetVertical</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.UI_Controls.zLabel/IconSizeEnum)</signature>
                        <name>set_GroupIconSize</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_GroupText</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.StringAlignment)</signature>
                        <name>set_GroupTextAlignment</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_GroupTextOffsetHorizontal</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_GroupTextOffsetVertical</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.ImeMode)</signature>
                        <name>set_ImeModeBase</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.RightToLeft)</signature>
                        <name>set_RightToLeft</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.ISite)</signature>
                        <name>set_Site</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.UI_Controls.zNavigatorTree/zNavigatorTreeState)</signature>
                        <name>set_State</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_TreeBranchColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Drawing2D.DashStyle)</signature>
                        <name>set_TreeBranchStyle</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Image)</signature>
                        <name>set_TreeCollapseIcon</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Image)</signature>
                        <name>set_TreeExpandIcon</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_TreeFontSize</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_TreeSelectedItemBackColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_TreeSelectedItemBorderColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_TreeSelectedItemForeColor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>timerCollapse_Tick</name>
                        <newname>ᜄ</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>timerExpand_Tick</name>
                        <newname>ᜃ</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>TreeBeginUpdate</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>TreeEndUpdate</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>zNavigatorTree_Load</name>
                        <newname>ᜂ</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>_AnimationSpeed</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_GroupHeight</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_Height</name>
                        <newname>ᜆ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_IsAnimating</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zNavigatorTree/zNavigatorTreeState</signature>
                        <name>_State</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_TreeSelectedItemForeColor</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_Width</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zLabel</signature>
                        <name>Group</name>
                        <newname>ᜈ</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Timer</signature>
                        <name>timerCollapse</name>
                        <newname>ᜋ</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Timer</signature>
                        <name>timerExpand</name>
                        <newname>ᜊ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zTreeView</signature>
                        <name>tree</name>
                        <newname>ᜉ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.UI_Controls.zNavigatorTree/zNavigatorTreeState</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.UI_Controls.zNavigatorTree/zNavigatorTreeState</signature>
                        <name>Collapsed</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zNavigatorTree/zNavigatorTreeState</signature>
                        <name>Expanded</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.UI_Controls.zQueryFilter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_UserChangedField</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_UserClickedX</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddCriteria</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddField</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AdjustControls</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnKill_Click</name>
                        <newname>ᜂ</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearCriteriaItems</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearFields</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>cmbField_SelectedIndexChanged</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>cmbOperator_SelectedIndexChanged</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FilterCriteria</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FilterCriteria2</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FilterField</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FilterOperator</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseCriteriaComboBox</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_UserChangedField</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_UserClickedX</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FilterCriteria</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FilterCriteria2</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FilterField</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FilterOperator</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseCriteriaComboBox</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetForDate</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetForNumber</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetForText</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>btnKill</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ComboBox</signature>
                        <name>cmbCriteria</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ComboBox</signature>
                        <name>cmbField</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ComboBox</signature>
                        <name>cmbOperator</name>
                        <newname>ᜆ</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblDash</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtCriteria</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtCriteria2</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>useCriteriaComboBox</name>
                        <newname>ᜈ</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>UserChangedField</name>
                        <newname>ᜊ</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>UserClickedX</name>
                        <newname>ᜉ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.UI_Controls.zTreeNode</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, System.Drawing.Color, System.Drawing.Color, System.Drawing.Color)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, System.Drawing.Image)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, System.Drawing.Image, System.Drawing.Color, System.Drawing.Color, System.Drawing.Color)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Drawing.Image)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image()</signature>
                        <name>get_Image</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_SelectedBackColorDark</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_SelectedBackColorLight</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_SelectedBorderColor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SubText</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_SubTextColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Image)</signature>
                        <name>set_Image</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_SelectedBackColorDark</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_SelectedBackColorLight</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_SelectedBorderColor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SubText</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_SubTextColor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Image</signature>
                        <name>_Image</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_SelectedBackColorDark</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_SelectedBackColorLight</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_SelectedBorderColor</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_sSubText</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_SubTextColor</name>
                        <newname>ᜂ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.UI_Controls.zTreeView</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.IContainer)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CheckForIcons</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle(zControlsC.UI_Controls.zTreeNode)</signature>
                        <name>ExpandCollapseBounds</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BranchLineColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Drawing2D.DashStyle()</signature>
                        <name>get_BranchLineStyle</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image()</signature>
                        <name>get_CollpaseIcon</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image()</signature>
                        <name>get_ExpandIcon</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Font()</signature>
                        <name>get_Font</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_SelectedBorderColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_SelectedDarkColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_SelectedLightColor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle(zControlsC.UI_Controls.zTreeNode)</signature>
                        <name>NodeBounds</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.TreeViewEventArgs)</signature>
                        <name>OnAfterCollapse</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.TreeViewEventArgs)</signature>
                        <name>OnAfterExpand</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.TreeViewEventArgs)</signature>
                        <name>OnAfterSelect</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnClick</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnClientSizeChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnDoubleClick</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.DrawTreeNodeEventArgs)</signature>
                        <name>OnDrawNode</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnFontChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnLocationChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseDown</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.TreeNodeMouseClickEventArgs)</signature>
                        <name>OnNodeMouseClick</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnResize</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BranchLineColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Drawing2D.DashStyle)</signature>
                        <name>set_BranchLineStyle</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Image)</signature>
                        <name>set_CollpaseIcon</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Image)</signature>
                        <name>set_ExpandIcon</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Font)</signature>
                        <name>set_Font</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_SelectedBorderColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_SelectedDarkColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_SelectedLightColor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32, System.Windows.Forms.BoundsSpecified)</signature>
                        <name>SetBoundsCore</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_BranchLineColor</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Drawing2D.DashStyle</signature>
                        <name>_BranchLineStyle</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Image</signature>
                        <name>_CollapseIcon</name>
                        <newname>ᜈ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_DrawIcons</name>
                        <newname>ᜆ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Image</signature>
                        <name>_ExpandIcon</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_selectedBorderColor</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_selectedDarkColor</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_selectedLightColor</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.Container</signature>
                        <name>components</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iCount</name>
                        <newname>ᜉ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.UI_Controls.zTreeView/zTreeViewExpandedIconSet</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.UI_Controls.zTreeView/zTreeViewExpandedIconSet</signature>
                        <name>Round</name>
                    </field>
                    <field>
                        <signature>zControlsC.UI_Controls.zTreeView/zTreeViewExpandedIconSet</signature>
                        <name>Simple</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.WindowsAPI.Win32</name>
                <methodlist>
                    <method>
                        <signature>bool(native int, int32, int32, int32, int32, native int, int32, int32, int32, int32, zControlsC.WindowsAPI.Win32/BLENDFUNCTION)</signature>
                        <name>AlphaBlend</name>
                    </method>
                    <method>
                        <signature>native int(native int, zControlsC.WindowsAPI.Win32/PAINTSTRUCT&amp;)</signature>
                        <name>BeginPaint</name>
                    </method>
                    <method>
                        <signature>bool(native int, int32, int32, int32, int32, native int, int32, int32, zControlsC.WindowsAPI.Win32/TernaryRasterOperations)</signature>
                        <name>BitBlt</name>
                    </method>
                    <method>
                        <signature>int32(native int, native int, native int, int32)</signature>
                        <name>CombineRgn</name>
                    </method>
                    <method>
                        <signature>native int(int32, int32, unsigned int32, unsigned int32, native int)</signature>
                        <name>CreateBitmap</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32, int32)</signature>
                        <name>CreateCompatibleBitmap</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>CreateCompatibleDC</name>
                    </method>
                    <method>
                        <signature>native int(string, string, string, native int)</signature>
                        <name>CreateDC</name>
                    </method>
                    <method>
                        <signature>native int(int32, int32, unsigned int32)</signature>
                        <name>CreatePen</name>
                    </method>
                    <method>
                        <signature>native int(int32, int32, int32, int32)</signature>
                        <name>CreateRectRgn</name>
                    </method>
                    <method>
                        <signature>native int(unsigned int32)</signature>
                        <name>CreateSolidBrush</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>DeleteDC</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>DeleteObject</name>
                    </method>
                    <method>
                        <signature>bool(native int, int32, int32, int32, int32)</signature>
                        <name>Ellipse</name>
                    </method>
                    <method>
                        <signature>bool(int32, System.Delegate, int32)</signature>
                        <name>EnumChildWindows</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32, int32, int32)</signature>
                        <name>ExcludeClipRect</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32, string, int32, native int)</signature>
                        <name>ExtEscape</name>
                    </method>
                    <method>
                        <signature>int32(native int, zControlsC.WindowsAPI.Win32/RECT&amp;, native int)</signature>
                        <name>FillRect</name>
                    </method>
                    <method>
                        <signature>bool(native int, native int, native int)</signature>
                        <name>FillRgn</name>
                    </method>
                    <method>
                        <signature>int32(string, string)</signature>
                        <name>FindWindow</name>
                    </method>
                    <method>
                        <signature>int32(native int, zControlsC.WindowsAPI.Win32/RECT&amp;)</signature>
                        <name>GetClipBox</name>
                    </method>
                    <method>
                        <signature>int32(native int, native int)</signature>
                        <name>GetClipRgn</name>
                    </method>
                    <method>
                        <signature>bool(native int, zControlsC.WindowsAPI.Win32/POINT&amp;)</signature>
                        <name>GetCurrentPositionEx</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetDesktopWindow</name>
                    </method>
                    <method>
                        <signature>native int()</signature>
                        <name>GetForegroundWindow</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int, unsigned int32)</signature>
                        <name>GetNearestColor</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, native int)</signature>
                        <name>GetObject</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int)</signature>
                        <name>GetObjectType</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int, int32, int32)</signature>
                        <name>GetPixel</name>
                    </method>
                    <method>
                        <signature>int32(native int, unsigned int32, native int)</signature>
                        <name>GetRegionData</name>
                    </method>
                    <method>
                        <signature>int32(native int, zControlsC.WindowsAPI.Win32/RECT&amp;)</signature>
                        <name>GetRgnBox</name>
                    </method>
                    <method>
                        <signature>bool(System.Runtime.InteropServices.HandleRef, zControlsC.WindowsAPI.Win32/RECT&amp;, bool)</signature>
                        <name>GetUpdateRect</name>
                    </method>
                    <method>
                        <signature>int32(native int, native int, bool)</signature>
                        <name>GetUpdateRgn</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>GetWindowDC</name>
                    </method>
                    <method>
                        <signature>int32(int32, System.Text.StringBuilder, int32)</signature>
                        <name>GetWindowText</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetWindowTextLength</name>
                    </method>
                    <method>
                        <signature>int32(int32, string, string, int32)</signature>
                        <name>MessageBox</name>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int32, native int, native int)</signature>
                        <name>PostMessage</name>
                    </method>
                    <method>
                        <signature>native int(native int, unsigned int32, native int, native int)</signature>
                        <name>SendMessage</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>SetForegroundWindow</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>AC_SRC_ALPHA</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>AC_SRC_OVER</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>COMPLEXREGION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ERROR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NULLREGION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SIMPLEREGION</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.WindowsAPI.Win32/BLENDFUNCTION</name>
                <methodlist>
                    <method>
                        <signature>void(unsigned int8, unsigned int8, unsigned int8, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>AlphaFormat</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>BlendFlags</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>BlendOp</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>SourceConstantAlpha</name>
                        <newname>ᜂ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.WindowsAPI.Win32/CombineRgnStyles</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/CombineRgnStyles</signature>
                        <name>RGN_AND</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/CombineRgnStyles</signature>
                        <name>RGN_COPY</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/CombineRgnStyles</signature>
                        <name>RGN_DIFF</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/CombineRgnStyles</signature>
                        <name>RGN_MAX</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/CombineRgnStyles</signature>
                        <name>RGN_MIN</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/CombineRgnStyles</signature>
                        <name>RGN_OR</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/CombineRgnStyles</signature>
                        <name>RGN_XOR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.WindowsAPI.Win32/PAINTSTRUCT</name>
                <newname>zControlsC.WindowsAPI.Win32/ᜀ</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>fErase</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>fIncUpdate</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>fRestore</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hdc</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/RECT</signature>
                        <name>rcPaint</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>rgbReserved</name>
                        <newname>ᜅ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.WindowsAPI.Win32/PenStyle</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_ALTERNATE</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_COSMETIC</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_DASH</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_DASHDOT</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_DASHDOTDOT</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_DOT</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_ENDCAP_FLAT</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_ENDCAP_MASK</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_ENDCAP_ROUND</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_ENDCAP_SQUARE</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_GEOMETRIC</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_INSIDEFRAME</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_JOIN_BEVEL</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_JOIN_MASK</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_JOIN_MITER</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_JOIN_ROUND</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_NULL</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_SOLID</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_STYLE_MASK</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_TYPE_MASK</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/PenStyle</signature>
                        <name>PS_USERSTYLE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.WindowsAPI.Win32/POINT</name>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Point(zControlsC.WindowsAPI.Win32/POINT)</signature>
                        <name>op_Implicit</name>
                    </method>
                    <method>
                        <signature>zControlsC.WindowsAPI.Win32/POINT(System.Drawing.Point)</signature>
                        <name>op_Implicit</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>X</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Y</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.WindowsAPI.Win32/RECT</name>
                <methodlist>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(zControlsC.WindowsAPI.Win32/RECT)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>zControlsC.WindowsAPI.Win32/RECT(System.Drawing.Rectangle)</signature>
                        <name>FromRectangle</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Bottom</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Height</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Left</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Point()</signature>
                        <name>get_Location</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Right</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size()</signature>
                        <name>get_Size</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Top</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Width</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_X</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Y</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>bool(zControlsC.WindowsAPI.Win32/RECT, zControlsC.WindowsAPI.Win32/RECT)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle(zControlsC.WindowsAPI.Win32/RECT)</signature>
                        <name>op_Implicit</name>
                    </method>
                    <method>
                        <signature>zControlsC.WindowsAPI.Win32/RECT(System.Drawing.Rectangle)</signature>
                        <name>op_Implicit</name>
                    </method>
                    <method>
                        <signature>bool(zControlsC.WindowsAPI.Win32/RECT, zControlsC.WindowsAPI.Win32/RECT)</signature>
                        <name>op_Inequality</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Bottom</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Height</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Left</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Point)</signature>
                        <name>set_Location</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Right</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Size)</signature>
                        <name>set_Size</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Top</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Width</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_X</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Y</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>ToRectangle</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle(zControlsC.WindowsAPI.Win32/RECT)</signature>
                        <name>ToRectangle</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>_bottom</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_left</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_right</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_top</name>
                        <newname>ᜁ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.WindowsAPI.Win32/RGNDATAHEADER</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwSize</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>iType</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>nCount</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>nRgnSize</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/RECT</signature>
                        <name>rcBound</name>
                        <newname>ᜄ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.WindowsAPI.Win32/TernaryRasterOperations</name>
                <newname>zControlsC.WindowsAPI.Win32/ᜁ</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/TernaryRasterOperations</signature>
                        <name>BLACKNESS</name>
                        <newname>ᜍ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/TernaryRasterOperations</signature>
                        <name>CAPTUREBLT</name>
                        <newname>ᜏ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/TernaryRasterOperations</signature>
                        <name>DSTINVERT</name>
                        <newname>ᜌ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/TernaryRasterOperations</signature>
                        <name>MERGECOPY</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/TernaryRasterOperations</signature>
                        <name>MERGEPAINT</name>
                        <newname>ᜈ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/TernaryRasterOperations</signature>
                        <name>NOTSRCCOPY</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/TernaryRasterOperations</signature>
                        <name>NOTSRCERASE</name>
                        <newname>ᜆ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/TernaryRasterOperations</signature>
                        <name>PATCOPY</name>
                        <newname>ᜉ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/TernaryRasterOperations</signature>
                        <name>PATINVERT</name>
                        <newname>ᜋ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/TernaryRasterOperations</signature>
                        <name>PATPAINT</name>
                        <newname>ᜊ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/TernaryRasterOperations</signature>
                        <name>SRCAND</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/TernaryRasterOperations</signature>
                        <name>SRCCOPY</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/TernaryRasterOperations</signature>
                        <name>SRCERASE</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/TernaryRasterOperations</signature>
                        <name>SRCINVERT</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/TernaryRasterOperations</signature>
                        <name>SRCPAINT</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>zControlsC.WindowsAPI.Win32/TernaryRasterOperations</signature>
                        <name>WHITENESS</name>
                        <newname>ᜎ</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.Zip.Zip</name>
                <methodlist>
                    <method>
                        <signature>string(string)</signature>
                        <name>UnZipFile</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>UnZipFile</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>ZipFile</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>zControlsC.zSchedulerReportFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.zSchedulerReportFile/StatusChangedHandler)</signature>
                        <name>add_StatusChanged</name>
                    </method>
                    <method>
                        <signature>string(zControlsC.zSchedulerReportFile/CatalogType)</signature>
                        <name>CatalogLocation</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>string(zControlsC.zSchedulerReportFile/CatalogType)</signature>
                        <name>CatalogPassword</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CheckProperties</name>
                        <newname>ᜀ</newname>
                    </method>
                    <method>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType()</signature>
                        <name>get_Catalog</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CopyAsFileName</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CopyFile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EmailBody</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EmailDL</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_EmailReport</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EmailSubject</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileExtension</name>
                    </method>
                    <method>
                        <signature>zControlsC.zSchedulerReportFile/FileFormatEnum()</signature>
                        <name>get_FileFormat</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FromEmail</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_IMR</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IncludeAttachment</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Prompt</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ReportName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SaveAsFilename</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_zSchedulerFileDir</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetStatus</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>RandomFileName</name>
                        <newname>ᜁ</newname>
                    </method>
                    <method>
                        <signature>void(zControlsC.zSchedulerReportFile/StatusChangedHandler)</signature>
                        <name>remove_StatusChanged</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SendReportToQueue</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.zSchedulerReportFile/CatalogType)</signature>
                        <name>set_Catalog</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CopyAsFileName</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CopyFile</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EmailBody</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EmailDL</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_EmailReport</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EmailSubject</name>
                    </method>
                    <method>
                        <signature>void(zControlsC.zSchedulerReportFile/FileFormatEnum)</signature>
                        <name>set_FileFormat</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FromEmail</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_IMR</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IncludeAttachment</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Prompt</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ReportName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SaveAsFilename</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_zSchedulerFileDir</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>timer_Tick</name>
                        <newname>ᜀ</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>_Catalog</name>
                        <newname>ᜇ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_CopyAsFileName</name>
                        <newname>ᜈ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_CopyFile</name>
                        <newname>ᜉ</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>_DateTime</name>
                        <newname>ᜄ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_EmailBody</name>
                        <newname>ᜐ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_EmailDL</name>
                        <newname>ᜑ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_EmailReport</name>
                        <newname>ᜊ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_EmailSubject</name>
                        <newname>ᜒ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_FileExtension</name>
                        <newname>ᜂ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/FileFormatEnum</signature>
                        <name>_FileFormat</name>
                        <newname>ᜌ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_FileLocation</name>
                        <newname>ᜀ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_FileName</name>
                        <newname>ᜁ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_FromEmail</name>
                        <newname>ᜓ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_IMR</name>
                        <newname>ᜍ</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_IncludeAttachment</name>
                        <newname>ᜋ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_Message</name>
                        <newname>ᜅ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_Operation</name>
                        <newname>ᜃ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_Prompt</name>
                        <newname>ᜎ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_ReportName</name>
                        <newname>ᜆ</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_SaveAsFilename</name>
                        <newname>ᜏ</newname>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/StatusChangedHandler</signature>
                        <name>StatusChanged</name>
                        <newname>᜕</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Timer</signature>
                        <name>timer</name>
                        <newname>᜔</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.zSchedulerReportFile/CatalogType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Bayer</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>BestBuy</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>CDW</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Comcast</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Dana</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Diebold</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Dow</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Fridgidaire_TMS</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Frigidaire_210</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>HP_210</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>HP_TMS</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>IBM_210</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>IBM_214</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>IBM_Gain_Share</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>IBM_Returns</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>IBM_TMS</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Imation</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>LMS_Load_Planner_Workload</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Maquet</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Margin</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Nike_Town</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>PhoenixBrands</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>PhoenixBrands_OpenBooking</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Pilkington</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Rates</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Ricoh</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>RR_Donnelley</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Sears_210</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Sears_214</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Sears_TMS</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Sika</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Slimfast</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Stanley</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Starbucks</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Takata</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Thomson</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>Tower</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/CatalogType</signature>
                        <name>WhatIf</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.zSchedulerReportFile/FileFormatEnum</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/FileFormatEnum</signature>
                        <name>CommaDelimitedFile</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/FileFormatEnum</signature>
                        <name>DatabaseFile</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/FileFormatEnum</signature>
                        <name>DataFile</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/FileFormatEnum</signature>
                        <name>ExcelWithFormat</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/FileFormatEnum</signature>
                        <name>ExcelWithoutFormat</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/FileFormatEnum</signature>
                        <name>SQLFile</name>
                    </field>
                    <field>
                        <signature>zControlsC.zSchedulerReportFile/FileFormatEnum</signature>
                        <name>TextFile</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>zControlsC.zSchedulerReportFile/StatusChangedHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, zControlsC.StatusChangedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, zControlsC.StatusChangedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>118</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>1331</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>758</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>8</statistic>
            <statistic>6.78 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>124</statistic>
            <statistic>9.32 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>420</statistic>
            <statistic>55.41 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'ᜀ'</description>
            <statistic>55</statistic>
            <statistic>4.13 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'ᜁ'</description>
            <statistic>32</statistic>
            <statistic>2.40 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'ᜂ'</description>
            <statistic>18</statistic>
            <statistic>1.35 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'ᜃ'</description>
            <statistic>9</statistic>
            <statistic>0.68 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'ᜄ'</description>
            <statistic>5</statistic>
            <statistic>0.38 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'ᜅ'</description>
            <statistic>2</statistic>
            <statistic>0.15 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'ᜈ'</description>
            <statistic>1</statistic>
            <statistic>0.08 %</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>